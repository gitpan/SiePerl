.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH SciEng 3 "perl 5.005, patch 03" "17/Aug/1998" "User Contributed Perl Documentation"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
Convert::SciEng \- Convert \*(L'numbers\*(R' with scientific postfixes
.SH "SYNOPSIS"
.PP
.Vb 1
\&  #!/usr/local/bin/perl -w
.Ve
.Vb 2
\&  use strict;
\&  use Convert::SciEng
.Ve
.Vb 2
\&  my $c = Convert::SciEng->new('spice');
\&  my $s = Convert::SciEng->new('si');
.Ve
.Vb 2
\&  print "Scalar\en";
\&  print $c->unfix('2.34u'), "\en\en";
.Ve
.Vb 2
\&  print "Array\en";
\&  print join "\en", $c->unfix(qw( 30.6k  10x  0.03456m  123n 45o)), "\en";
.Ve
.Vb 6
\&  ##Note, default format is 5.5g
\&  print "Default format is %5.5g\en";
\&  print join "\en", $c->fix(qw( 35e5 0.123e-4 200e3 )), "";
\&  $c->format('%8.2f');
\&  print "Change the format is %8.2g\en";
\&  print join "\en", $c->fix(qw( 35e5 0.123e-4 200e3 )), "";
.Ve
.Vb 2
\&  print "Check out the SI conversion\en";
\&  print join "\en", $s->unfix(qw( 30.6K  10M  0.03456m  123n 45o)), "";
.Ve
.SH "REQUIRES"
perl5.004_04 or greater, Carp
.PP
I'm sorry if you get bit by the 5.004_04 but I believe in the
Cathedral model.  Keep current or suffer the penalties.
.SH "DESCRIPTION"
Convert::SciEng supplies an object for converting numbers to and from
scientific notation with user-defined formatting.  Two different styles
of fix are supported, standard SI and SPICE:
.PP
.Vb 3
\& SPICE  =    P    T   g   x   k  ''    m    u    n     p     f     a
\& SI     =    P    T   G   M   K  ''    m    u    n     p     f     a
\& Fix    = 1e15 1e12 1e9 1e6 1e3 1e0 1e-3 1e-6 1e-9 1e-12 1e-15 1e-18
.Ve
Methods are supplied for creating the object and defining which fix style
it will use, and defining for format of numbers as they are converted to
scientific notation.
.SH "METHODS"
.Sh "Creation"
.Ip "Convert::SciEng->new('style');" 4
Creates and returns a new Number::\s-1SI\s0 object of the appropiate style,
either \f(CW'si'\fR or \f(CW'spice'\fR. The styles aren't case sensitive
.Ip "$fix->format(\s-1FORMAT\s0);" 4
Sets the format of number converter \fB\s-1TO\s0\fR fix to be \f(CWFORMAT\fR.
\s-1FORMAT\s0 is any valid format to sprintf, like \f(CW'%5.5g'\fR or \f(CW'%6.4e'\fR.
The default format is \f(CW'%5.5g'\fR.
.Sh "Conversion"
.Ip "$fix->fix(0.030405); # 30.405m" 4
Convert a number to scientific notation with fixes.
Returns a string in the format given to it with the fix appended to
the end.  Also works with arrays, with an array of strings being
returned.
.Ip "$fix->unfix('12u'); # 12e-06" 4
Convert a string from scientific notation.  Returns a number in
exponential format.  Also works with arrays, with an array of numbers
being returned.
.PP
Note, by examining the module it should be relatively easy to figure out
how to create an object for any other scientific notation abbreviations.
If you think it is something that might be useful to others, then
email me and I'll add it to the module.
.SH "DIAGNOSTICS"
.Ip "Unrecognized mode: \s-1MODE\s0" 4
(F) Generated when you try specify an illegal mode like so:
  
  \f(CW$a\fR = Convert::SciEng->\fInew\fR\|('foo');
.Ip "Illegal printf format: \s-1FORMAT\s0" 4
(F) An illegal format was specified.  Valid formats must match the following
regexp:
.Sp
\f(CW/^\e%\ed+(\e.\ed+)?([scduxoefg]|l[duxo])$/\fR
.SH "AUTHOR"
Colin Kuskie, colink@latticesemi.com
.SH "KUDOS"
Many thanks to Steven McDougall for his comments about the content and
style of my module and for sending me his templates for module
creation.  They can be found at:
.Sp
http://world.std.com/~swmcd/steven/Perl/index.html
.Sp
and I highly recommend them for beginning module writers.
.Sp
Also thanks to Tom Christiansen for the perltoot podpage.

.rn }` ''
.IX Title "SciEng 3"
.IX Name "Convert::SciEng - Convert 'numbers' with scientific postfixes"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "REQUIRES"

.IX Header "DESCRIPTION"

.IX Header "METHODS"

.IX Subsection "Creation"

.IX Item "Convert::SciEng->new('style');"

.IX Item "$fix->format(\s-1FORMAT\s0);"

.IX Subsection "Conversion"

.IX Item "$fix->fix(0.030405); # 30.405m"

.IX Item "$fix->unfix('12u'); # 12e-06"

.IX Header "DIAGNOSTICS"

.IX Item "Unrecognized mode: \s-1MODE\s0"

.IX Item "Illegal printf format: \s-1FORMAT\s0"

.IX Header "AUTHOR"

.IX Header "KUDOS"

