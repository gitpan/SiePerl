.rn '' }`
''' $RCSfile$$Revision$$Date$
'''
''' $Log$
'''
.de Sh
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp
.if t .sp .5v
.if n .sp
..
.de Ip
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb
.ft CW
.nf
.ne \\$1
..
.de Ve
.ft R

.fi
..
'''
'''
'''     Set up \*(-- to give an unbreakable dash;
'''     string Tr holds user defined translation string.
'''     Bell System Logo is used as a dummy character.
'''
.tr \(*W-|\(bv\*(Tr
.ie n \{\
.ds -- \(*W-
.ds PI pi
.if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\" diablo 12 pitch
.ds L" ""
.ds R" ""
'''   \*(M", \*(S", \*(N" and \*(T" are the equivalent of
'''   \*(L" and \*(R", except that they are used on ".xx" lines,
'''   such as .IP and .SH, which do another additional levels of
'''   double-quote interpretation
.ds M" """
.ds S" """
.ds N" """""
.ds T" """""
.ds L' '
.ds R' '
.ds M' '
.ds S' '
.ds N' '
.ds T' '
'br\}
.el\{\
.ds -- \(em\|
.tr \*(Tr
.ds L" ``
.ds R" ''
.ds M" ``
.ds S" ''
.ds N" ``
.ds T" ''
.ds L' `
.ds R' '
.ds M' `
.ds S' '
.ds N' `
.ds T' '
.ds PI \(*p
'br\}
.\"	If the F register is turned on, we'll generate
.\"	index entries out stderr for the following things:
.\"		TH	Title 
.\"		SH	Header
.\"		Sh	Subsection 
.\"		Ip	Item
.\"		X<>	Xref  (embedded
.\"	Of course, you have to process the output yourself
.\"	in some meaninful fashion.
.if \nF \{
.de IX
.tm Index:\\$1\t\\n%\t"\\$2"
..
.nr % 0
.rr F
.\}
.TH IPC::Semaphore 3 "perl 5.005, patch 03" "30/Jul/1998" "Perl Programmers Reference Guide"
.UC
.if n .hy 0
.if n .na
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.de CQ          \" put $1 in typewriter font
.ft CW
'if n "\c
'if t \\&\\$1\c
'if n \\&\\$1\c
'if n \&"
\\&\\$2 \\$3 \\$4 \\$5 \\$6 \\$7
'.ft R
..
.\" @(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2
.	\" AM - accent mark definitions
.bd B 3
.	\" fudge factors for nroff and troff
.if n \{\
.	ds #H 0
.	ds #V .8m
.	ds #F .3m
.	ds #[ \f1
.	ds #] \fP
.\}
.if t \{\
.	ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.	ds #V .6m
.	ds #F 0
.	ds #[ \&
.	ds #] \&
.\}
.	\" simple accents for nroff and troff
.if n \{\
.	ds ' \&
.	ds ` \&
.	ds ^ \&
.	ds , \&
.	ds ~ ~
.	ds ? ?
.	ds ! !
.	ds /
.	ds q
.\}
.if t \{\
.	ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.	ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.	ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.	ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.	ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.	ds ? \s-2c\h'-\w'c'u*7/10'\u\h'\*(#H'\zi\d\s+2\h'\w'c'u*8/10'
.	ds ! \s-2\(or\s+2\h'-\w'\(or'u'\v'-.8m'.\v'.8m'
.	ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.	ds q o\h'-\w'o'u*8/10'\s-4\v'.4m'\z\(*i\v'-.4m'\s+4\h'\w'o'u*8/10'
.\}
.	\" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds v \\k:\h'-(\\n(.wu*9/10-\*(#H)'\v'-\*(#V'\*(#[\s-4v\s0\v'\*(#V'\h'|\\n:u'\*(#]
.ds _ \\k:\h'-(\\n(.wu*9/10-\*(#H+(\*(#F*2/3))'\v'-.4m'\z\(hy\v'.4m'\h'|\\n:u'
.ds . \\k:\h'-(\\n(.wu*8/10)'\v'\*(#V*4/10'\z.\v'-\*(#V*4/10'\h'|\\n:u'
.ds 3 \*(#[\v'.2m'\s-2\&3\s0\v'-.2m'\*(#]
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.ds oe o\h'-(\w'o'u*4/10)'e
.ds Oe O\h'-(\w'O'u*4/10)'E
.	\" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.	\" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.	ds : e
.	ds 8 ss
.	ds v \h'-1'\o'\(aa\(ga'
.	ds _ \h'-1'^
.	ds . \h'-1'.
.	ds 3 3
.	ds o a
.	ds d- d\h'-1'\(ga
.	ds D- D\h'-1'\(hy
.	ds th \o'bp'
.	ds Th \o'LP'
.	ds ae ae
.	ds Ae AE
.	ds oe oe
.	ds Oe OE
.\}
.rm #[ #] #H #V #F C
.SH "NAME"
IPC::Semaphore \- SysV Semaphore IPC object class
.SH "SYNOPSIS"
.PP
.Vb 16
\&    use IPC::SysV qw(IPC_PRIVATE S_IRWXU IPC_CREAT);
\&    use IPC::Semaphore;
\&    
\&    $sem = new IPC::Semaphore(IPC_PRIVATE, 10, S_IRWXU | IPC_CREAT);
\&    
\&    $sem->setall( (0) x 10);
\&    
\&    @sem = $sem->getall;
\&    
\&    $ncnt = $sem->getncnt;
\&    
\&    $zcnt = $sem->getzcnt;
\&    
\&    $ds = $sem->stat;
\&    
\&    $sem->remove;
.Ve
.SH "DESCRIPTION"
.SH "METHODS"
.Ip "new ( \s-1KEY\s0 , \s-1NSEMS\s0 , \s-1FLAGS\s0 )" 4
Create a new semaphore set associated with \f(CWKEY\fR. \f(CWNSEMS\fR is the number
of semaphores in the set. A new set is created if
.Ip "\(bu" 8
\f(CWKEY\fR is equal to \f(CWIPC_PRIVATE\fR
.Ip "\(bu" 8
\f(CWKEY\fR does not already  have  a  semaphore  identifier
associated with it, and \f(CW\fIFLAGS\fR & IPC_CREAT\fR is true.
.Sp
On creation of a new semaphore set \f(CWFLAGS\fR is used to set the
permissions.
.Ip "getall" 4
Returns the values of the semaphore set as an array.
.Ip "getncnt ( \s-1SEM\s0 )" 4
Returns the number of processed waiting for the semaphore \f(CWSEM\fR to
become greater than it's current value
.Ip "getpid ( \s-1SEM\s0 )" 4
Returns the process id of the last process that performed an operation
on the semaphore \f(CWSEM\fR.
.Ip "getval ( \s-1SEM\s0 )" 4
Returns the current value of the semaphore \f(CWSEM\fR.
.Ip "getzcnt ( \s-1SEM\s0 )" 4
Returns the number of processed waiting for the semaphore \f(CWSEM\fR to
become zero.
.Ip "id" 4
Returns the system identifier for the semaphore set.
.Ip "op ( \s-1OPLIST\s0 )" 4
\f(CWOPLIST\fR is a list of operations to pass to \f(CWsemop\fR. \f(CWOPLIST\fR is
a concatenation of smaller lists, each which has three values. The
first is the semaphore number, the second is the operation and the last
is a flags value. See the \fIsemop\fR manpage for more details. For example
.Sp
.Vb 4
\&    $sem->op(
\&        0, -1, IPC_NOWAIT,
\&        1,  1, IPC_NOWAIT
\&    );
.Ve
.Ip "remove" 4
Remove and destroy the semaphore set from the system.
.Ip "set ( \s-1STAT\s0 )" 4
.Ip "set ( \s-1NAME\s0 => \s-1VALUE\s0 [, \s-1NAME\s0 => \s-1VALUE\s0 ...] )" 4
\f(CWset\fR will set the following values of the \f(CWstat\fR structure associated
with the semaphore set.
.Sp
.Vb 3
\&    uid
\&    gid
\&    mode (oly the permission bits)
.Ve
\f(CWset\fR accepts either a stat object, as returned by the \f(CWstat\fR method,
or a list of \fIname\fR\-\fIvalue\fR pairs.
.Ip "setall ( \s-1VALUES\s0 )" 4
Sets all values in the semaphore set to those given on the \f(CWVALUES\fR list.
\f(CWVALUES\fR must contain the correct number of values.
.Ip "setval ( N , \s-1VALUE\s0 )" 4
Set the \f(CWN\fRth value in the semaphore set to \f(CWVALUE\fR
.Ip "stat" 4
Returns an object of type \f(CWIPC::Semaphore::stat\fR which is a sub-class of
\f(CWClass::Struct\fR. It provides the following fields. For a description
of these fields see you system documentation.
.Sp
.Vb 8
\&    uid
\&    gid
\&    cuid
\&    cgid
\&    mode
\&    ctime
\&    otime
\&    nsems
.Ve
.SH "SEE ALSO"
the \fIIPC::SysV\fR manpage the \fIClass::Struct\fR manpage the \fIsemget\fR manpage the \fIsemctl\fR manpage the \fIsemop\fR manpage 
.SH "AUTHOR"
Graham Barr <gbarr@pobox.com>
.SH "COPYRIGHT"
Copyright (c) 1997 Graham Barr. All rights reserved.
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

.rn }` ''
.IX Title "IPC::Semaphore 3"
.IX Name "IPC::Semaphore - SysV Semaphore IPC object class"

.IX Header "NAME"

.IX Header "SYNOPSIS"

.IX Header "DESCRIPTION"

.IX Header "METHODS"

.IX Item "new ( \s-1KEY\s0 , \s-1NSEMS\s0 , \s-1FLAGS\s0 )"

.IX Item "\(bu"

.IX Item "\(bu"

.IX Item "getall"

.IX Item "getncnt ( \s-1SEM\s0 )"

.IX Item "getpid ( \s-1SEM\s0 )"

.IX Item "getval ( \s-1SEM\s0 )"

.IX Item "getzcnt ( \s-1SEM\s0 )"

.IX Item "id"

.IX Item "op ( \s-1OPLIST\s0 )"

.IX Item "remove"

.IX Item "set ( \s-1STAT\s0 )"

.IX Item "set ( \s-1NAME\s0 => \s-1VALUE\s0 [, \s-1NAME\s0 => \s-1VALUE\s0 ...] )"

.IX Item "setall ( \s-1VALUES\s0 )"

.IX Item "setval ( N , \s-1VALUE\s0 )"

.IX Item "stat"

.IX Header "SEE ALSO"

.IX Header "AUTHOR"

.IX Header "COPYRIGHT"

