.\" Automatically generated by Pod::Man version 1.15
.\" Fri Apr 20 13:06:03 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "PERLVOS 1"
.TH PERLVOS 1 "perl v5.6.1" "2001-03-03" "Perl Programmers Reference Guide"
.UC
.SH "NAME"
\&\s-1README\s0.vos \- Perl for Stratus \s-1VOS\s0
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This is a port of Perl version 5 to \s-1VOS\s0.  Perl is a scripting or
macro language that is popular on many systems.  See your local
computer bookstore for a number of good books on Perl.
.Sh "Stratus \s-1POSIX\s0 Support"
.IX Subsection "Stratus POSIX Support"
Note that there are two different implementations of \s-1POSIX\s0.1
support on \s-1VOS\s0.  There is an alpha version of \s-1POSIX\s0 that is
available from the Stratus anonymous ftp site
(ftp://ftp.stratus.com/pub/vos/posix/alpha/alpha.html).  There
is a generally-available version of \s-1POSIX\s0 that comes with the
\&\s-1VOS\s0 Standard C compiler and C runtime in \s-1VOS\s0 Release 14.3.0 or
higher.  This port of \s-1POSIX\s0 will compile and bind with either
version of \s-1POSIX\s0.
.PP
Most of the Perl features should work on \s-1VOS\s0 regardless of which
version of \s-1POSIX\s0 that you are using.  However, the alpha version
of \s-1POSIX\s0 is missing a number of key functions, and therefore any
attempt by perl.pm to call the following unimplemented \s-1POSIX\s0
functions will result in an error message and an immediate and
fatal call to the \s-1VOS\s0 debugger.  They are \*(L"dup\*(R", \*(L"fork\*(R", and
\&\*(L"waitpid\*(R".  The lack of these functions pretty much prevents you
from starting \s-1VOS\s0 commands and grabbing their output in perl.
The workaround is to run the commands outside of perl, then have
perl process the output file.  These functions are all available
in the generally-available version of \s-1POSIX\s0.
.SH "INSTALLING PERL IN VOS"
.IX Header "INSTALLING PERL IN VOS"
.Sh "Compiling Perl 5 on \s-1VOS\s0"
.IX Subsection "Compiling Perl 5 on VOS"
Before you can build Perl 5 on \s-1VOS\s0, you need to have or acquire the
following additional items.
.Ip "1" 5
.IX Item "1"
The \s-1VOS\s0 Standard C Compiler and Runtime, or the \s-1VOS\s0 Standard C
Cross-Compiler.  This is a standard Stratus product.
.Ip "2" 5
.IX Item "2"
Either the \s-1VOS\s0 \s-1OS\s0 \s-1TCP/IP\s0 or \s-1STCP\s0 product set.  If you are
building with the alpha version of \s-1POSIX\s0 you need the \s-1OS\s0
\&\s-1TCP/IP\s0 product set.  If you are building with the
generally-available version of \s-1POSIX\s0 you need the \s-1STCP\s0
product set.  These are standard Stratus products.
.Ip "3" 5
.IX Item "3"
Either the alpha or generally-available version of the \s-1VOS\s0
\&\s-1POSIX\s0.1 environment.
.Sp
The alpha version of \s-1POSIX\s0.1 support is available on the
Stratus \s-1FTP\s0 site.  Login anonymously to ftp.stratus.com and
get the file /pub/vos/posix/alpha/posix.save.evf.gz in
binary file-transfer mode.  Or use the Uniform Resource
Locator (\s-1URL\s0)
ftp://ftp.stratus.com/pub/vos/alpha/posix.save.evf.gz from
your web browser.  Instructions for unbundling this file
are at ftp://ftp.stratus.com/pub/vos/utility/utility.html.
This is not a standard Stratus product.
.Sp
The generally-available version of \s-1POSIX\s0.1 support is
bundled with the \s-1VOS\s0 Standard C compiler and Runtime (or
Cross-Compiler) in \s-1VOS\s0 Release 14.3.0 or higher.  This is a
standard Stratus product.
.Ip "4" 5
.IX Item "4"
You must compile this version of Perl 5 on \s-1VOS\s0 Release
14.1.0 or higher because some of the perl source files
contain more than 32,767 source lines.  Due to \s-1VOS\s0
release-compatibility rules, this port of perl may not
execute on \s-1VOS\s0 Release 12 or earlier.
.PP
To build perl 5, change to the \*(L"vos\*(R" subdirectory and type the
command \*(L"compile_perl \-processor X\*(R", where X is the processor
type (mc68020, i80860, pa7100, pa8000) that you wish to use.
Note that the generally-available version of \s-1POSIX\s0.1 support is
not available for the mc68020 or i80860 processors.
.PP
You must have purchased the \s-1VOS\s0 Standard C Cross Compiler in
order to compile perl for a processor type that is different
from the processor type of the module.
.PP
Note that code compiled for the pa7100 processor type can
execute on the \s-1PA7100\s0, \s-1PA8000\s0, \s-1PA8500\s0 and \s-1PA8600\s0 processors, and
that code compiled for the pa8000 processor type can execute on
the \s-1PA8000\s0, \s-1PA8500\s0 and \s-1PA8600\s0 processors.
.Sh "Installing Perl 5 on \s-1VOS\s0"
.IX Subsection "Installing Perl 5 on VOS"
.Ip "1" 4
.IX Item "1"
Create the directory >system>ported>command_library.
.Ip "2" 4
.IX Item "2"
Copy the appropriate version of the perl program module to
this directory.  For example, with your current directory
set to the top-level directory of Perl 5, to install the
executable program module for the Motorola 68K
architecture, enter:
.Sp
.Vb 1
\&          !copy_file vos>obj>perl.pm >system>ported>command_library>*
.Ve
(If you wish to use both Perl version 4 and Perl version 5,
you must give them different names; for example, perl.pm
and perl5.pm).
.Ip "3" 4
.IX Item "3"
Create the directory >system>ported>perl>lib.
.Ip "4" 4
.IX Item "4"
Copy all of the files and subdirectories from the lib
subdirectory into this new directory.  For example, with
the current directory set to the top-level directory of the
perl distribution, enter:
.Sp
.Vb 1
\&          !copy_dir lib >system>ported>perl>lib>5.6
.Ve
.Ip "5" 4
.IX Item "5"
While there are currently no architecture-specific
extensions or modules distributed with perl, the following
directories can be used to hold such files:
.Sp
.Vb 4
\&          >system>ported>perl>lib>5.6.68k
\&          >system>ported>perl>lib>5.6.860
\&          >system>ported>perl>lib>5.6.7100
\&          >system>ported>perl>lib>5.6.8000
.Ve
.Ip "6" 4
.IX Item "6"
Site-specific perl extensions and modules can be installed in one of
two places.  Put architecture-independent files into:
.Sp
.Vb 1
\&          >system>ported>perl>lib>site>5.6
.Ve
Put architecture-dependent files into one of the following
directories:
.Sp
.Vb 4
\&          >system>ported>perl>lib>site>5.6.68k
\&          >system>ported>perl>lib>site>5.6.860
\&          >system>ported>perl>lib>site>5.6.7100
\&          >system>ported>perl>lib>site>5.6.8000
.Ve
.Ip "7" 4
.IX Item "7"
You can examine the \f(CW@INC\fR variable from within a perl program
to see the order in which Perl searches these directories.
.SH "USING PERL IN VOS"
.IX Header "USING PERL IN VOS"
.Sh "Unimplemented Features"
.IX Subsection "Unimplemented Features"
If perl is built with the alpha version of \s-1VOS\s0 \s-1POSIX\s0.1 support
and if it attempts to call an unimplemented \s-1VOS\s0 \s-1POSIX\s0.1
function, it will print a fatal error message and enter the \s-1VOS\s0
debugger.  This error is not recoverable.  See vos_dummies.c for
a list of the unimplemented \s-1POSIX\s0.1 functions.  To see what
functions are unimplemented and what the error message looks
like, compile and execute \*(L"test_vos_dummies.c\*(R".
.Sh "Restrictions"
.IX Subsection "Restrictions"
This port of Perl version 5 to \s-1VOS\s0 prefers Unix-style,
slash-separated pathnames over VOS-style greater-than-separated
pathnames.  VOS-style pathnames should work in most contexts, but
if you have trouble, replace all greater-than characters by slash
characters.  Because the slash character is used as a pathname
delimiter, Perl cannot process \s-1VOS\s0 pathnames containing a slash
character in a directory or file name; these must be renamed.
.PP
This port of Perl also uses Unix-epoch date values internally.
As long as you are dealing with \s-1ASCII\s0 character string
representations of dates, this should not be an issue.  The
supported epoch is January 1, 1980 to January 17, 2038.
.PP
See the file pod/perlport.pod for more information about the \s-1VOS\s0
port of Perl.
.SH "SUPPORT STATUS"
.IX Header "SUPPORT STATUS"
I'm offering this port \*(L"as is\*(R".  You can ask me questions, but I
can't guarantee I'll be able to answer them.  There are some
excellent books available on the Perl language; consult a book
seller.
.SH "AUTHOR"
.IX Header "AUTHOR"
Paul Green (Paul_Green@stratus.com)
.SH "LAST UPDATE"
.IX Header "LAST UPDATE"
February 13, 2001
