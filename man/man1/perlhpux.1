.\" Automatically generated by Pod::Man version 1.15
.\" Fri Apr 20 13:05:41 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "PERLHPUX 1"
.TH PERLHPUX 1 "perl v5.6.1" "2001-03-03" "Perl Programmers Reference Guide"
.UC
.SH "NAME"
\&\s-1README\s0.hpux \- Perl version 5 on Hewlett-Packard Unix (\s-1HP-UX\s0) systems
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes various features of \s-1HP\s0's Unix operating system
(\s-1HP-UX\s0) that will affect how Perl version 5 (hereafter just Perl) is
compiled and/or runs.
.Sh "Compiling Perl 5 on \s-1HP-UX\s0"
.IX Subsection "Compiling Perl 5 on HP-UX"
When compiling Perl, you must use an \s-1ANSI\s0 C compiler.  The C compiler
that ships with all \s-1HP-UX\s0 systems is a K&R compiler that should only be
used to build new kernels.
.PP
Perl can be compiled with either \s-1HP\s0's \s-1ANSI\s0 C compiler or with gcc.  The
former is recommended, as not only can it compile Perl with no
difficulty, but also can take advantage of features listed later that
require the use of \s-1HP\s0 compiler-specific command-line flags.
.PP
If you decide to use gcc, make sure your installation is recent and
complete, and be sure to read the Perl \s-1README\s0 file for more gcc-specific
details.
.Sh "\s-1PA-RISC\s0"
.IX Subsection "PA-RISC"
\&\s-1HP\s0's current Unix systems run on its own Precision Architecture
(\s-1PA-RISC\s0) chip.  \s-1HP-UX\s0 used to run on the Motorola \s-1MC68000\s0 family of
chips, but any machine with this chip in it is quite obsolete and this
document will not attempt to address issues for compiling Perl on the
Motorola chipset.
.PP
The most recent version of \s-1PA-RISC\s0 at the time of this document's last
update is 2.0.
.Sh "\s-1PA-RISC\s0 1.0"
.IX Subsection "PA-RISC 1.0"
The original version of \s-1PA-RISC\s0, \s-1HP\s0 no longer sells any system with this chip.
.PP
The following systems contain \s-1PA-RISC\s0 1.0 chips:
.PP
.Vb 2
\&    600, 635, 645, 808, 815, 822, 825, 832, 834, 835, 840, 842, 845, 850, 852,
\&    855, 860, 865, 870, 890
.Ve
.Sh "\s-1PA-RISC\s0 1.1"
.IX Subsection "PA-RISC 1.1"
An upgrade to the \s-1PA-RISC\s0 design, it shipped for many years in many different
system.
.PP
The following systems contain with \s-1PA-RISC\s0 1.1 chips:
.PP
.Vb 9
\&    705, 710, 712, 715, 720, 722, 725, 728, 730, 735, 742, 743, 745, 747, 750,
\&    755, 770, 777, 778, 779, 800, 801, 803, 806, 807, 809, 811, 813, 816, 817,
\&    819, 821, 826, 827, 829, 831, 837, 839, 841, 847, 849, 851, 856, 857, 859,
\&    867, 869, 877, 887, 891, 892, 897, A180, A180C, B115, B120, B132L, B132L+,
\&    B160L, B180L, C100, C110, C115, C120, C160L, D200, D210, D220, D230, D250,
\&    D260, D310, D320, D330, D350, D360, D410, DX0, DX5, DZO, E25, E35, E45,
\&    E55, F10, F20, F30, G30, G40, G50, G60, G70, H20, H30, H40, H50, H60, H70,
\&    I30, I40, I50, I60, I70, J200, J210, J210XC, K100, K200, K210, K220, K230,
\&    K400, K410, K420, S700i, S715, S724, S760, T500, T520
.Ve
.Sh "\s-1PA-RISC\s0 2.0"
.IX Subsection "PA-RISC 2.0"
The most recent upgrade to the \s-1PA-RISC\s0 design, it added support for
64\-bit integer data.
.PP
As of the date of this document's last update, the following systems
contain \s-1PA-RISC\s0 2.0 chips (this is very likely to be out of date):
.PP
.Vb 6
\&    700, 780, 781, 782, 783, 785, 802, 804, 810, 820, 861, 871, 879, 889, 893,
\&    895, 896, 898, 899, B1000, C130, C140, C160, C180, C180+, C180-XP, C200+,
\&    C400+, C3000, C360, CB260, D270, D280, D370, D380, D390, D650, J220, J2240,
\&    J280, J282, J400, J410, J5000, J7000, K250, K260, K260-EG, K270, K360,
\&    K370, K380, K450, K460, K460-EG, K460-XP, K470, K570, K580, L1000, L2000,
\&    N4000, R380, R390, T540, T600, V2000, V2200, V2250, V2500
.Ve
A complete list of models at the time the \s-1OS\s0 was built is in the file
/opt/langtools/lib/sched.models.  The first column corresponds to the
output of the \*(L"uname \-m\*(R" command (without the leading \*(L"9000/\*(R").  The
second column is the \s-1PA-RISC\s0 version and the third column is the exact
chip type used.
.Sh "Portability Between \s-1PA-RISC\s0 Versions"
.IX Subsection "Portability Between PA-RISC Versions"
An executable compiled on a \s-1PA-RISC\s0 2.0 platform will not execute on a
\&\s-1PA-RISC\s0 1.1 platform, even if they are running the same version of
\&\s-1HP-UX\s0.  If you are building Perl on a \s-1PA-RISC\s0 2.0 platform and want that
Perl to to also run on a \s-1PA-RISC\s0 1.1, the compiler flags +DAportable and
+DS32 should be used.
.PP
It is no longer possible to compile \s-1PA-RISC\s0 1.0 executables on either
the \s-1PA-RISC\s0 1.1 or 2.0 platforms.
.Sh "Building Dynamic Extensions on \s-1HP-UX\s0"
.IX Subsection "Building Dynamic Extensions on HP-UX"
\&\s-1HP-UX\s0 supports dynamically loadable libraries (shared libraries).
Shared libraries end with the suffix .sl.
.PP
Shared libraries created on a platform using a particular \s-1PA-RISC\s0
version are not usable on platforms using an earlier \s-1PA-RISC\s0 version by
default.  However, this backwards compatibility may be enabled using the
same +DAportable compiler flag (with the same \s-1PA-RISC\s0 1.0 caveat
mentioned above).
.PP
To create a shared library, the following steps must be performed:
.PP
.Vb 3
\&    1. Compile source modules with +z or +Z flag to create a .o module
\&       which contains Position-Independent Code (PIC).  The linker will
\&       tell you in the next step if +Z was needed.
.Ve
.Vb 3
\&    2. Link the shared library using the -b flag.  If the code calls
\&       any functions in other system libraries (e.g., libm), it must
\&       be included on this line.
.Ve
(Note that these steps are usually handled automatically by the extension's
Makefile).
.PP
If these dependent libraries are not listed at shared library creation
time, you will get fatal \*(L"Unresolved symbol\*(R" errors at run time when the
library is loaded.
.PP
You may create a shared library that refers to another library, which
may be either an archive library or a shared library.  If this second
library is a shared library, this is called a \*(L"dependent library\*(R".  The
dependent library's name is recorded in the main shared library, but it
is not linked into the shared library.  Instead, it is loaded when the
main shared library is loaded.  This can cause problems if you build an
extension on one system and move it to another system where the
libraries may not be located in the same place as on the first system.
.PP
If the referred library is an archive library, then it is treated as a
simple collection of .o modules (all of which must contain \s-1PIC\s0).  These
modules are then linked into the shared library.
.PP
Note that it is okay to create a library which contains a dependent
library that is already linked into perl.
.PP
It is no longer possible to link \s-1PA-RISC\s0 1.0 shared libraries.
.Sh "The \s-1HP\s0 \s-1ANSI\s0 C Compiler"
.IX Subsection "The HP ANSI C Compiler"
When using this compiler to build Perl, you should make sure that the
flag \-Aa is added to the cpprun and cppstdin variables in the config.sh
file (though see the section on 64\-bit perl below).
.Sh "Using Large Files with Perl"
.IX Subsection "Using Large Files with Perl"
Beginning with \s-1HP-UX\s0 version 10.20, files larger than 2GB (2^31 bytes)
may be created and manipulated.  Three separate methods of doing this
are available.  Of these methods, the best method for Perl is to compile
using the \-Duselargefiles flag to Configure.  This causes Perl to be
compiled using structures and functions in which these are 64 bits wide,
rather than 32 bits wide.  (Note that this will only work with \s-1HP\s0's \s-1ANSI\s0
C compiler.  If you want to compile Perl using gcc, you will have to get
a version of the compiler that support 64\-bit operations.)
.PP
There are some drawbacks to this approach.  One is that any extension
which calls any file-manipulating C function will need to be recompiled
(just follow the usual \*(L"perl Makefile.PL; make; make test; make install\*(R"
procedure).
.PP
The list of functions that will need to recompiled is:
creat,		fgetpos,	fopen,
freopen,	fsetpos,	fstat,
fstatvfs,	fstatvfsdev,	ftruncate,
ftw,		lockf,		lseek,
lstat,		mmap,		nftw,
open,		prealloc,	stat,
statvfs,	statvfsdev,	tmpfile,
truncate,	getrlimit,	setrlimit
.PP
Another drawback is only valid for Perl versions before 5.6.0.  This
drawback is that the seek and tell functions (both the builtin version
and \s-1POSIX\s0 module version) will not perform correctly.
.PP
It is strongly recommended that you use this flag when you run
Configure.  If you do not do this, but later answer the question about
large files when Configure asks you, you may get a configuration that
cannot be compiled, or that does not function as expected.
.Sh "Threaded Perl"
.IX Subsection "Threaded Perl"
It is possible to compile a version of threaded Perl on any version of
\&\s-1HP-UX\s0 before 10.30, but it is strongly suggested that you be running on
\&\s-1HP-UX\s0 11.00 at least.
.PP
To compile Perl with threads, add \-Dusethreads to the arguments of
Configure.  Verify that the \-D_POSIX_C_SOURCE=199506L compiler flag is
automatically added to the list of flags.  Also make sure that \-lpthread
is listed before \-lc in the list of libraries to link Perl with.
.PP
As of the date of this document, Perl threads are not fully supported on
\&\s-1HP-UX\s0.
.PP
\&\s-1HP-UX\s0 versions before 10.30 require a seperate installation of a \s-1POSIX\s0
threads library package. Two examples are the \s-1HP\s0 \s-1DCE\s0 package, available
on \*(L"\s-1HP-UX\s0 Hardware Extensions 3.0, Install and Core \s-1OS\s0, Release 10.20,
April 1999 (B3920\-13941)\*(R" or the Freely available \s-1PTH\s0 package, available
though worldwide \s-1HP-UX\s0 mirrors of precompiled packages
(e.g. http://hpux.tn.tudelft.nl/hppd/hpux/alpha.html)
.Sh "64\-bit Perl"
.IX Subsection "64-bit Perl"
Beginning with \s-1HP-UX\s0 11.00, programs compiled under \s-1HP-UX\s0 can take
advantage of the \s-1LP64\s0 programming environment (\s-1LP64\s0 means Longs and
Pointers are 64 bits wide).
.PP
Work is being performed on Perl to make it 64\-bit compliant on all
versions of Unix.  Once this is complete, scalar variables will be able
to hold numbers larger than 2^32 with complete precision.
.PP
As of the date of this document, Perl is not 64\-bit compliant on \s-1HP-UX\s0.
.PP
Should a user wish to experiment with compiling Perl in the \s-1LP64\s0
environment, use the \-Duse64bitall flag to Configure.  This will force
Perl to be compiled in a pure \s-1LP64\s0 environment (via the +DD64 flag).
.PP
You can also use the \-Duse64bitint flag to Configure.  Although there
are some minor differences between compiling Perl with this flag versus
the \-Duse64bitall flag, they should not be noticeable from a Perl user's
perspective.
.PP
In both cases, it is strongly recommended that you use these flags when
you run Configure.  If you do not use do this, but later answer the
questions about 64\-bit numbers when Configure asks you, you may get a
configuration that cannot be compiled, or that does not function as
expected.
.PP
(Note that these Configure flags will only work with \s-1HP\s0's \s-1ANSI\s0 C
compiler.  If you want to compile Perl using gcc, you will have to get a
version of the compiler that support 64\-bit operations.)
.Sh "\s-1GDBM\s0 and Threads"
.IX Subsection "GDBM and Threads"
If you attempt to compile Perl with threads on an 11.X system and also
link in the \s-1GDBM\s0 library, then Perl will immediately core dump when it
starts up.  The only workaround at this point is to relink the \s-1GDBM\s0
library under 11.X, then relink it into Perl.
.Sh "\s-1NFS\s0 filesystems and \fIutime\fP\|(2)"
.IX Subsection "NFS filesystems and utime"
If you are compiling Perl on a remotely-mounted \s-1NFS\s0 filesystem, the test
io/fs.t may fail on test #18.  This appears to be a bug in \s-1HP-UX\s0 and no
fix is currently available.
.Sh "perl \-P and //"
.IX Subsection "perl -P and //"
In \s-1HP-UX\s0 Perl is compiled with flags that will cause problems if the
\&\-P flag of Perl (preprocess Perl code with the C preprocessor before
perl sees it) is used.  The problem is that \f(CW\*(C`//\*(C'\fR, being a \*(C+\-style
until-end-of-line comment, will disappear along with the remainder
of the line.  This means that common Perl constructs like
.PP
.Vb 1
\&    s/foo//;
.Ve
will turn into illegal code
.PP
.Vb 1
\&    s/foo
.Ve
The workaround is to use some other quoting separator than \f(CW\*(C`"/"\*(C'\fR,
like for example \f(CW\*(C`"!"\*(C'\fR:
.PP
.Vb 1
\&    s!foo!!;
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Jeff Okamoto <okamoto@corp.hp.com>
.PP
With much assistance regarding shared libraries from Marc Sabatella.
.SH "DATE"
.IX Header "DATE"
Version 0.6.2: 2001\-02\-02
