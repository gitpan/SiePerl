.\" Automatically generated by Pod::Man version 1.15
.\" Fri Apr 20 13:05:27 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "PERLAIX 1"
.TH PERLAIX 1 "perl v5.6.1" "2001-03-19" "Perl Programmers Reference Guide"
.UC
.SH "NAME"
\&\s-1README\s0.aix \- Perl version 5 on \s-1IBM\s0 Unix (\s-1AIX\s0) systems
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This document describes various features of \s-1IBM\s0's Unix operating
system (\s-1AIX\s0) that will affect how Perl version 5 (hereafter just Perl)
is compiled and/or runs.
.Sh "Compiling Perl 5 on \s-1AIX\s0"
.IX Subsection "Compiling Perl 5 on AIX"
When compiling Perl, you must use an \s-1ANSI\s0 C compiler. \s-1AIX\s0 does not ship
an \s-1ANSI\s0 compliant C-compiler with \s-1AIX\s0 by default, but binary builds of
gcc for \s-1AIX\s0 are widely available.
.PP
At the moment of writing, \s-1AIX\s0 supports two different native C compilers,
for which you have to pay: \fBxlc\fR and \fB\s-1VAC\s0\fR. If you decide to use eiter
of these two (which is quite a lot easier than using gcc), be sure to
upgrade to the latest available patch level. Currently:
.PP
.Vb 2
\&    xlC.C     3.1.4.0
\&    vac.C     4.4.0.3   (5.0 is already available)
.Ve
Perl can be compiled with either \s-1IBM\s0's \s-1ANSI\s0 C compiler or with gcc.
The former is recommended, as not only can it compile Perl with no
difficulty, but also can take advantage of features listed later that
require the use of \s-1IBM\s0 compiler-specific command-line flags.
.PP
If you decide to use gcc, make sure your installation is recent and
complete, and be sure to read the Perl \s-1README\s0 file for more gcc-specific
details.
.Sh "\s-1OS\s0 level"
.IX Subsection "OS level"
Before installing the patches to the \s-1IBM\s0 C-compiler you need to know the
level of patching for the Operating System. \s-1IBM\s0's command 'oslevel' will
show the base, but is not always complete:
.PP
.Vb 6
\&    # oslevel
\&    4.3.0.0
\&    # lslpp -l | grep 'bos.rte '
\&    bos.rte      4.3.2.1  COMMITTED  Base Operating System Runtime
\&    bos.rte      4.3.2.0  COMMITTED  Base Operating System Runtime
\&    #
.Ve
.Sh "Building Dynamic Extensions on \s-1AIX\s0"
.IX Subsection "Building Dynamic Extensions on AIX"
\&\s-1AIX\s0 supports dynamically loadable libraries (shared libraries).
Shared libraries end with the suffix .a, which is a bit misleading,
because *all* libraries are shared ;\-).
.Sh "The \s-1IBM\s0 \s-1ANSI\s0 C Compiler"
.IX Subsection "The IBM ANSI C Compiler"
All defaults for Configure can be used.
.PP
If you've chosen to use vac 4, be sure to run 4.4.0.3. Older versions
will turn up nasty later on.
.PP
Here's a brief lead of how to upgrade the compiler to the latest
level.  Of course this is subject to changes.  You can only upgrade
versions from ftp-available updates if the first three digit groups
are the same (in where you can skip intermediate unlike the patches
in the developer snapshots of perl), or to one version up where the
`base' is available.  In other words, the \s-1AIX\s0 compiler patches are
cumulative.
.PP
.Vb 2
\& vac.C.4.4.0.1 => vac.C.4.4.0.3  is OK     (vac.C.4.4.0.2 not needed)
\& xlC.C.3.1.3.3 => xlC.C.3.1.4.10 is NOT OK (xlC.C.3.1.4.0 is not available)
.Ve
.Vb 23
\& # ftp ftp.software.ibm.com
\& Connected to service.boulder.ibm.com.
\& : welcome message ...
\& Name (ftp.software.ibm.com:merijn): anonymous
\& 331 Guest login ok, send your complete e-mail address as password.
\& Password:
\& ... accepted login stuff
\& ftp> cd /aix/fixes/v4/
\& ftp> dir other other.ll
\& output to local-file: other.ll? y
\& 200 PORT command successful.
\& 150 Opening ASCII mode data connection for /bin/ls.
\& 226 Transfer complete.
\& ftp> dir xlc xlc.ll
\& output to local-file: xlc.ll? y
\& 200 PORT command successful.
\& 150 Opening ASCII mode data connection for /bin/ls.
\& 226 Transfer complete.
\& ftp> bye
\& ... goodbye messages
\& # ls -l *.ll
\& -rw-rw-rw-   1 merijn   system    1169432 Nov  2 17:29 other.ll
\& -rw-rw-rw-   1 merijn   system      29170 Nov  2 17:29 xlc.ll
.Ve
On \s-1AIX\s0 4.2 using xlC, we continue:
.PP
.Vb 16
\& # lslpp -l | fgrep 'xlC.C '
\&   xlC.C                     3.1.4.9  COMMITTED  C for AIX Compiler
\&   xlC.C                     3.1.4.0  COMMITTED  C for AIX Compiler
\& # grep 'xlC.C.3.1.4.*.bff' xlc.ll
\& -rw-r--r--   1 45776101 1        6286336 Jul 22 1996  xlC.C.3.1.4.1.bff
\& -rw-rw-r--   1 45776101 1        6173696 Aug 24 1998  xlC.C.3.1.4.10.bff
\& -rw-r--r--   1 45776101 1        6319104 Aug 14 1996  xlC.C.3.1.4.2.bff
\& -rw-r--r--   1 45776101 1        6316032 Oct 21 1996  xlC.C.3.1.4.3.bff
\& -rw-r--r--   1 45776101 1        6315008 Dec 20 1996  xlC.C.3.1.4.4.bff
\& -rw-rw-r--   1 45776101 1        6178816 Mar 28 1997  xlC.C.3.1.4.5.bff
\& -rw-rw-r--   1 45776101 1        6188032 May 22 1997  xlC.C.3.1.4.6.bff
\& -rw-rw-r--   1 45776101 1        6191104 Sep  5 1997  xlC.C.3.1.4.7.bff
\& -rw-rw-r--   1 45776101 1        6185984 Jan 13 1998  xlC.C.3.1.4.8.bff
\& -rw-rw-r--   1 45776101 1        6169600 May 27 1998  xlC.C.3.1.4.9.bff
\& # wget ftp://ftp.software.ibm.com/aix/fixes/v4/xlc/xlC.C.3.1.4.10.bff
\& #
.Ve
On \s-1AIX\s0 4.3 using vac, we continue:
.PP
.Vb 9
\& # lslpp -l | fgrep 'vac.C '
\&   vac.C                      4.4.0.2  COMMITTED  C for AIX Compiler
\&   vac.C                      4.4.0.0  COMMITTED  C for AIX Compiler
\& # grep 'vac.C.4.4.0.*.bff' other.ll
\& -rw-rw-r--   1 45776101 1        13466624 May 26 1999  vac.C.4.4.0.1.bff
\& -rw-rw-r--   1 45776101 1        13473792 Aug 31 1999  vac.C.4.4.0.2.bff
\& -rw-rw-r--   1 45776101 1        13480960 May 19 20:32 vac.C.4.4.0.3.bff
\& # wget ftp://ftp.software.ibm.com/aix/fixes/v4/other/vac.C.4.4.0.3.bff
\& #
.Ve
Then execute the following command, and fill in its choices
.PP
.Vb 5
\& # smit install_update
\&  -> Install and Update from LATEST Available Software
\&  * INPUT device / directory for software [ vac.C.4.4.0.3.bff    ]
\&  [ OK ]
\&  [ OK ]
.Ve
Follow the messages ... and you're done.
.Sh "Using \s-1GNU\s0's gcc for building perl"
.IX Subsection "Using GNU's gcc for building perl"
\&... ?
.Sh "Using Large Files with Perl"
.IX Subsection "Using Large Files with Perl"
\&... ?
.Sh "Threaded Perl"
.IX Subsection "Threaded Perl"
\&... ?
.Sh "64\-bit Perl"
.IX Subsection "64-bit Perl"
\&... ?
.Sh "\s-1GDBM\s0 and Threads"
.IX Subsection "GDBM and Threads"
\&... ?
.Sh "\s-1NFS\s0 filesystems and \fIutime\fP\|(2)"
.IX Subsection "NFS filesystems and utime"
\&... ?
.SH "AUTHOR"
.IX Header "AUTHOR"
H.Merijn Brand <h.m.brand@hccnet.nl>
.PP
Structure copied from \s-1README\s0.hpux
.SH "DATE"
.IX Header "DATE"
Version 0.0.1: 16\-10\-2000
