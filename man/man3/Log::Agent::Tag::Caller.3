.\" Automatically generated by Pod::Man version 1.15
.\" Mon Apr 23 13:10:57 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "Agent::Tag::Caller 3"
.TH Agent::Tag::Caller 3 "perl v5.6.1" "2001-03-14" "User Contributed Perl Documentation"
.UC
.SH "NAME"
Log::Agent::Tag::Caller \- formats caller information
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& Not intended to be used directly
\& Inherits from Log::Agent::Tag.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class handles caller information for Log::Agent services and is not
meant to be used directly.
.PP
This manpage therefore only documents the creation routine parameters
that can be specified at the Log::Agent level via the \f(CW\*(C`\-caller\*(C'\fR switch
in the \fIlogconfig()\fR routine.
.SH "CALLER INFORMATION ENTITIES"
.IX Header "CALLER INFORMATION ENTITIES"
This class knows about four entities: \fIpackage\fR, \fIfilename\fR, \fIline\fR
and \fIsubroutine\fR, which are to be understood within the context of the
Log::Agent routine being called (e.g. a \fIlogwarn()\fR routine), namely:
.Ip "package" 4
.IX Item "package"
This is the package name where the call to the \fIlogwarn()\fR routine was made.
It can be specified as \*(L"pack\*(R" for short, or spelled out completely.
.Ip "filename" 4
.IX Item "filename"
This is the file where the call to the \fIlogwarn()\fR routine was made.
It can be specified as \*(L"file\*(R" for short, or spelled out completely.
.Ip "line" 4
.IX Item "line"
This is the line number where the call to the \fIlogwarn()\fR routine was made,
in file \fIfilename\fR. The name is short enough to be spelled out completely.
.Ip "subroutine" 4
.IX Item "subroutine"
This is the subroutine where the call to the \fIlogwarn()\fR routine was made.
If the call is made outside a subroutine, this will be empty.
The name is long enough to warrant the \*(L"sub\*(R" abbreviation if you don't wish
to spell it out fully.
.SH "CREATION ROUTINE PARAMETERS"
.IX Header "CREATION ROUTINE PARAMETERS"
The purpose of those parameters is to define how caller information entities
(as defined by the previous section) will be formatted within the log message.
.if n .Ip "\f(CW""""\-display""""\fR => \fIstring\fR" 4
.el .Ip "\f(CW\-display\fR => \fIstring\fR" 4
.IX Item "-display => string"
Specifies a string with minimal variable substitution: only the caller
information entities specified above, or their abbreviation, will be
interpolated. For instance:
.Sp
.Vb 1
\&        -display => '($package::$sub/$line)'
.Ve
Don't forget to use simple quotes to avoid having Perl interpolate those
as variables, or escape their leading \f(CW\*(C`$\*(C'\fR sign otherwise. Using this
convention was deemed to more readable (and natural in Perl)
than \s-1SGML\s0 entities such as \*(L"&pack;\*(R".
.Sp
Using this switch supersedes the \f(CW\*(C`\-info\*(C'\fR and \f(CW\*(C`\-format\*(C'\fR switches.
.if n .Ip "\f(CW""""\-format""""\fR => \fIprintf format\fR" 4
.el .Ip "\f(CW\-format\fR => \fIprintf format\fR" 4
.IX Item "-format => printf format"
Formatting instructions for the caller information entities
listed by the \f(CW\*(C`\-info\*(C'\fR switch. For instance:
.Sp
.Vb 1
\&    -format => "%s:%4d"
.Ve
if you have specified two entities in \f(CW\*(C`\-info\*(C'\fR.
.Sp
The special formatting macro \f(CW\*(C`%a\*(C'\fR stands for all the entities specified
by \f(CW\*(C`\-info\*(C'\fR and is rendered by a string where values are separated by \*(L":\*(R".
.if n .Ip "\f(CW""""\-info""""\fR => \fI""""space separated list of parameters""""\fR" 4
.el .Ip "\f(CW\-info\fR => \fI``space separated list of parameters''\fR" 4
.IX Item "-info => "space separated list of parameters"
Specifies a list of caller information entities that are to be formated
using the \f(CW\*(C`\-format\*(C'\fR specification. For instance:
.Sp
.Vb 1
\&        -info => "pack sub line"
.Ve
would only report those three entites.
.if n .Ip "\f(CW""""\-postfix""""\fR => \fIflag\fR" 4
.el .Ip "\f(CW\-postfix\fR => \fIflag\fR" 4
.IX Item "-postfix => flag"
Whether the string resulting from the formatting of the caller information
entities should be appended to the regular log message or not
(i.e. prepended, which is the default).
.if n .Ip "\f(CW""""\-separator""""\fR => \fIstring\fR" 4
.el .Ip "\f(CW\-separator\fR => \fIstring\fR" 4
.IX Item "-separator => string"
The separation string between the tag and the log message.
A single space by default.
.SH "AUTHOR"
.IX Header "AUTHOR"
Raphael Manfredi \fI<Raphael_Manfredi@pobox.com>\fR
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fILog::Agent\fR\|(3), \fILog::Agent::Message\fR\|(3).
