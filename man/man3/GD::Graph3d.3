.\" Automatically generated by Pod::Man version 1.15
.\" Mon Apr 23 11:51:00 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "GD::Graph3d 3"
.TH GD::Graph3d 3 "perl v5.6.1" "2000-10-09" "User Contributed Perl Documentation"
.UC
.SH "NAME"
\&\s-1GD:\s0:Graph3D \- Create 3D Graphs with \s-1GD\s0 and \s-1GD:\s0:Graph
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 12
\&        use GD::Graph::moduleName;
\&        @data = ( 
\&           ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
\&           [ 1203,  3500,  3973,  2859,  3012,  3423,  1230]
\&        );
\&        $graph->set( 
\&                x_label           => 'Day of the week',
\&                y_label           => 'Number of hits',
\&                title             => 'Daily Summary of Web Site',
\&        );
\&        $graph = GD::Graph::moduleName->new( 400, 300 );
\&        my $gd = $graph->plot( \e@data );
.Ve
Where \fImoduleName\fR is one of \f(CW\*(C`bars3d\*(C'\fR, \f(CW\*(C`lines3d\*(C'\fR or \f(CW\*(C`pie3d\*(C'\fR. 
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is the \s-1GD:\s0:Graph3d extensions module. It provides 3D graphs for the 
\&\s-1GD:\s0:Graph module by Martien Verbruggen, which in turn generates graph 
using Lincoln Stein's \s-1GD\s0.pm.
.PP
You use these modules just as you would any of the \s-1GD:\s0:Graph modules, except 
that they generate 3d-looking graphs. Each graph type is described below 
with only the options that are unique to the 3d version. The modules are 
based on their 2d versions (e.g. \s-1GD:\s0:Graph::bars3d works like 
\&\s-1GD:\s0:Graph::bars), and support all the options in those. Make sure to read 
the documentation on \s-1GD:\s0:Graph.
.Ip "\s-1GD:\s0:Graph::pie3d" 4
.IX Item "GD::Graph::pie3d"
This is merely a wrapper around \s-1GD:\s0:Graph::pie for consistency. It also 
sets 3d pie mode by default (which \s-1GD:\s0:Graph does as of version 1.22).
All options are exactly as in \s-1GD:\s0:Graph::pie.
.Ip "\s-1GD:\s0:Graph::bars3d" 4
.IX Item "GD::Graph::bars3d"
This works like \s-1GD:\s0:Graph::bars, but draws 3d bars. The following settings 
are new or changed in \s-1GD:\s0:Graph::bars3d.
.RS 4
.Ip "bar_depth" 4
.IX Item "bar_depth"
Sets the z-direction depth of the bars. This defaults to 10. If you have a 
large number of bars or a small chart width, you may want to change this. 
A visually good value for this is approximately 
width_of_chart / number_of_bars.
.Ip "overwrite" 4
.IX Item "overwrite"
In \s-1GD:\s0:Graph::bars, multiple series of bars are normally drawn side-by-side. 
You can set overwrite to 1 to tell it to draw each series behind the 
previous one. By setting overwrite to 2 you can have them drawn on top of 
each other, that is the series are stacked.
.Ip "shading" 4
.IX Item "shading"
By default this is set to '1' and will shade and highlight the bars (and axes).
The light source is at top-left-center which scan well for most computer 
users. You can disable the shading of bars and axes by specifiying a false 
value for this option.
.RE
.RS 4
.RE
.Ip "\s-1GD:\s0:Graph::lines3d" 4
.IX Item "GD::Graph::lines3d"
This works like \s-1GD:\s0:Graph::lines, but draws 3d line. The following settings 
are new or changed in \s-1GD:\s0:Graph::line3d.
.RS 4
.Ip "line_depth" 4
.IX Item "line_depth"
Sets the z-direction depth of the lines. This defaults to 10. If you have a 
large number of bars or a small chart width, you may want to change this. 
A visually good value for this is approximately 
width_of_chart / number_of_bars.
.Ip "shading" 4
.IX Item "shading"
By default this is set to '1' and will shade and highlight the line (and axes).
The light source is at top-left-center which scan well for most computer 
users. You can disable the shading of lines and axes by specifiying a false 
value for this option.
.RE
.RS 4
.RE
.SH "VERSION"
.IX Header "VERSION"
0.54 (Septemnber 4, 2000)
.SH "INSTALLATION"
.IX Header "INSTALLATION"
You will need to have the \s-1GD:\s0:Graph version 1.30 or later installed. You should also 
have Perl version 5.005 or 5.6 installed.
.PP
To install, just do the normal:
.PP
.Vb 3
\&        perl Makefile.PL
\&        make
\&        make install
.Ve
The documentation is in \s-1GD:\s0:Graph::Graph3d.pod.
.SH "AUTHOR"
.IX Header "AUTHOR"
Jeremy Wadsack for Wadsack-Allen Digital Group. 
<\fIdgsupport@wadsack-allen.com\fR>
.PP
Most of the modules are based on the \s-1GD:\s0:Graph modules by Martien Verbruggen.
.SH "LATEST RELEASE"
.IX Header "LATEST RELEASE"
The latest release is available from \s-1CPAN:\s0 http://www.cpan.org/.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 1999,2000 Wadsack-Allen. All rights reserved.
.PP
Much of the original code is from \s-1GD:\s0:Graph:
.PP
GIFgraph: Copyright (c) 1995\-1999 Martien Verbruggen.
.PP
Chart::PNGgraph: Copyright (c) 1999 Steve Bonds.
.PP
\&\s-1GD:\s0:Graph: Copyright (c) 1999 Martien Verbruggen.
.PP
This package is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
