.\" Automatically generated by Pod::Man version 1.15
.\" Mon Apr 23 11:44:42 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "FAQ 1"
.TH FAQ 1 "perl v5.6.1" "2000-10-07" "User Contributed Perl Documentation"
.UC
.SH "NAME"
\&\s-1GD:\s0:Graph \- Frequently asked questions
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Sh "I am drawing a bar chart, and the chart area is a lot smaller than the image. What is going on?"
.IX Subsection "I am drawing a bar chart, and the chart area is a lot smaller than the image. What is going on?"
As of version 1.30, \s-1GD:\s0:Graph automatically corrects the width of the
plotting area of a chart if it needs to draw bars (i.e. for bars and
some mixed charts). This is necessary, because rounding errors cause
irregular gaps between or overlaps of bars if the bar is not an exact
integer number of pixels wide.  
.PP
If you want the old behaviour back, set the correct_with attribute to a
false value.
.Sh "I have my data in some format that doesn't look at all like the array that I am supposed to give to \s-1GD:\s0:Graph's plot method."
.IX Subsection "I have my data in some format that doesn't look at all like the array that I am supposed to give to GD::Graph's plot method."
Check out the \s-1GD:\s0:Graph::Data class. 
.Sh "Where is the ActiveState ppm of \s-1GD:\s0:Graph?"
.IX Subsection "Where is the ActiveState ppm of GD::Graph?"
Ask them. I have asked them, but didn't get an answer. I don't know what
to do to get it included in their set of ppms, and I really do not have
the time to keep asking them.
.Sh "Do you have some example code for me?"
.IX Subsection "Do you have some example code for me?"
The distribution has a large set of examples in it. If you don't have
the original distribution, please get it from \s-1CPAN\s0 (http://www.cpan.org/
or some local mirror). 
.Sh "Will you support X or Y?"
.IX Subsection "Will you support X or Y?"
If you send me a patch that (in a decent manner) adds the functionality
to the latest version, I may very well add it for the next release. If
you don't send me a patch, but just a question, you will have to be
patient.
.Sh "Why does export_format give me a weird string, instead of just 'png' or 'gif'?"
.IX Subsection "Why does export_format give me a weird string, instead of just 'png' or 'gif'?"
As of version 1.31, export_format in a list context returns all formats
that \s-1GD\s0 can export. If you are only interested in the answer 'gif' or
\&'png', make sure that you call it in a scalar context.
.PP
.Vb 5
\&  $export_format = GD::Graph->export_format;
\&  $export_format = $graph->export_format;
\&  print "Export format is ", scalar $graph->export_format, "\en";
\&  print "Export format is " .  $graph->export_format . "\en";
\&  @export_formats = $graph->export_format;
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Martien Verbruggen <mgjv@tradingpost.com.au>
.PP
Copyright (c) 2000 Martien Verbruggen.
.PP
All rights reserved. This package is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.
