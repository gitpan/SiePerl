.\" Automatically generated by Pod::Man version 1.15
.\" Mon Apr 23 12:29:59 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "MatchNames 3"
.TH MatchNames 3 "perl v5.6.1" "2000-01-04" "User Contributed Perl Documentation"
.UC
.SH "NAME"
Lingua::EN::MatchNames \- Smart matching for human names.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Lingua::EN::MatchNames qw(matchnames);
.Ve
.Vb 1
\&  $score= name_eq( $firstn_0, $lastn_0, $firstn_1, $lastn_1 );
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
You have two databases of person records that need to be synchronized or matched up,
but they use different keys\*(--maybe one uses \s-1SSN\s0 and the other uses employee id.
The only fields you have to match on are first and last name.
.PP
That's what this module is for.
.PP
Just feed the first and last names to the \f(CW\*(C`name_eq()\*(C'\fR function, and it returns
\&\f(CW\*(C`undef\*(C'\fR for no possible match, and a percentage of certainty (rank) otherwise.
The ranking system isn't very scientific, and gender isn't considered, though
it probably should be.
.PP
The \f(CW\*(C`name_eq()\*(C'\fR function, checks for: 
.Ip "\(bu inconsistent case (MacHenry = Machenry = \s-1MACHENRY\s0)" 4
.IX Item "inconsistent case (MacHenry = Machenry = MACHENRY)"
.PD 0
.Ip "\(bu inconsistent symbols (O'Brien = Obrien = O \s-1BRIEN\s0)" 4
.IX Item "inconsistent symbols (O'Brien = Obrien = O BRIEN)"
.Ip "\(bu misspellings (Grene = Green)" 4
.IX Item "misspellings (Grene = Green)"
.Ip "\(bu last name hyphenation (Smith-Curry = Curry)" 4
.IX Item "last name hyphenation (Smith-Curry = Curry)"
.Ip "\(bu similar phonetics (Hanson = Hansen)" 4
.IX Item "similar phonetics (Hanson = Hansen)"
.Ip "\(bu nicknames (Midge = Peggy = Margaret)" 4
.IX Item "nicknames (Midge = Peggy = Margaret)"
.Ip "\(bu extraneous initials (H. Ross = Ross)" 4
.IX Item "extraneous initials (H. Ross = Ross)"
.Ip "\(bu extraneous suffixes (Reed, Jr. = Reed \s-1II\s0 = Reed)" 4
.IX Item "extraneous suffixes (Reed, Jr. = Reed II = Reed)"
.Ip "\(bu and more..." 4
.IX Item "and more..."
.PD
.Sh "Preliminary Tests:"
.IX Subsection "Preliminary Tests:"
.Vb 18
\&  Homer Simpson HOMER SIMPOSN: 77
\&  Marge Simpson MIDGE SIMPSON: 81
\&  Brian Lalonde BRYAN LA LONDE: 82
\&  Brian Lalonde RYAN LALAND: 72
\&  Peggy MacHenry Midge Machenry: 81
\&  Liz Grene Elizabeth Green: 72
\&  Chuck Reed, Jr. Charles Reed II: 82
\&  Kathy O'Brien Catherine Obrien: 81
\&  Lizzie Hanson Lisa Hanson: 91
\&  H. Ross Perot Ross PEROT: 88
\&  Kathy Smith-Curry KATIE CURRY: 81
\&  Dina Johnson-Warner Dinah J-Warner: 80
\&  Leela Miles-Conrad Leela MilesConrad: 86
\&  C. Renee Smythe Cathy Smythe: 71
\&  Victoria (Honey) Rider HONEY RIDER: 88
\&  Bart Simpson El Barto Simpson: 80
\&  Bart Simpson Lisa Simpson: (no match)
\&  Arthur Dent Zaphod Beeblebrox: (no match)
.Ve
.SH "WARNING"
.IX Header "WARNING"
The scoring in this version is utterly arbitrary.
I made all of the numbers up.
The certainty percentages should be \s-1OK\s0 relative to each other, but
would be better if someone could give me some statistical data.
.PP
Be sure and \fBtest\fR this against your data first!
Your data may not look like my test data.
.PP
And although I hope this is useful to many, I do not provide any
kind of warranty (expressed or implied), and do not suggest the
suitability of this module to any particular purpose.  
This module probably should not be used for life support or military
purposes, and it \fBmust\fR not be used for unsolicited commercial email
or other bulk advertising.
.SH "AUTHOR"
.IX Header "AUTHOR"
Brian Lalonde, <brianl@sd81.k12.wa.us>
.SH "REQUIREMENTS"
.IX Header "REQUIREMENTS"
Lingua::EN::NameParse,
Lingua::EN::Nickname,
Parse::RecDescent,
String::Approx, 
Text::Metaphone,
Text::Soundex
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIperl\fR\|(1), 
the Lingua::EN::NameParse manpage,
the Lingua::EN::Nickname manpage,
the String::Approx manpage, 
the Text::Metaphone manpage,
the Text::Soundex manpage
