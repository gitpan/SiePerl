.\" Automatically generated by Pod::Man version 1.15
.\" Mon Apr 23 14:09:43 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "XMLViewer 3"
.TH XMLViewer 3 "perl v5.6.1" "2000-09-01" "User Contributed Perl Documentation"
.UC
.SH "NAME"
Tk::XMLViewer \- Tk widget to display \s-1XML\s0
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&  use Tk::XMLViewer;
\&  $xmlviewer = $top->XMLViewer->pack;
\&  $xmlviewer->insertXML(-file => "test.xml");
\&  $xmlviewer->insertXML(-text => "<?xml?><a><bla /><foo>bar</foo></a>");
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Tk::XMLViewer is an widget inherited from Tk::Text which displays \s-1XML\s0
in a hierarchical tree. You can use the plus and minus buttons to
hide/show parts of the tree.
.SH "METHODS"
.IX Header "METHODS"
.Ip "insertXML" 4
.IX Item "insertXML"
Insert \s-1XML\s0 into the XMLViewer widget. Use the \-file argument to insert
a file and \-text to insert an \s-1XML\s0 string.
.Ip "DumpXML" 4
.IX Item "DumpXML"
Dump the contents of an Tk::Text widget into an \s-1XML\s0 string, which can
be used as input for the XMLViewer widget. Use the static variant for
Tk::Text widgets and the method for XMLViewer widgets.
.Sp
.Vb 2
\&    $xml_string1 = Tk::XMLViewer::DumpXML($text_widget);
\&    $xml_string2 = $xmlviewer->DumpXML;
.Ve
.Ip "SetIndent" 4
.IX Item "SetIndent"
Set indent with for \s-1XML\s0 tags
.Sp
.Vb 1
\&    $xmlviewer->SetIndent(width);
.Ve
.Ip "XMLMenu" 4
.IX Item "XMLMenu"
Insert \s-1XML\s0 Menu into Text widget menu.
.Sp
.Vb 1
\&    $xmlviewer->XMLMenu;
.Ve
.Ip "SourceType" 4
.IX Item "SourceType"
Returns type of source used for last insertXML (\-file or \-text)
.Ip "SourceContent" 4
.IX Item "SourceContent"
Returns filename (source type \-file) or \s-1XML\s0 text (source type \-text) used
for last insertXML.
.Ip "GetInfo" 4
.IX Item "GetInfo"
Returns hash of standard \s-1XML\s0 decl and \s-1DOCTYPE\s0 elements:
.Sp
.Vb 1
\&    my %xmlheader = $xmlviewer->GetInfo;
.Ve
Elements for XMLdecl: Version Encoding Standalone
Elements for \s-1DOCTYPE:\s0 Name Sysid Pubid Internal
.SH "BUGS"
.IX Header "BUGS"
Perl/Tk does not support Unicode, yet. For perl 5.6.0 and newer,
unicode characters are translated to \s-1ISO-8859\-1\s0 chars, if possible.
For older perls, there is no conversion (unless Unicode::String is
installed), so unicode characters will show as binary values.
.PP
DumpXML will not work with nested text tags.
.PP
There should be only one insertXML operation at one time (these is
probably only an issue with threaded operations, which do not work in
Perl/Tk anyway).
.PP
Viewing of large \s-1XML\s0 files is slow.
.PP
head1 \s-1TODO\s0
.PP
.Vb 3
\& - show to depth n: close everything from depth n+1
\& - create menu item "close selected region"
\& - DTD validation (is this possible with XML::Parser?)
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Slaven Rezic, <eserte@cs.tu-berlin.de>
.PP
Some additions by Jerry Geiger <jgeiger@rios.de>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
the XML::Parser manpage(3), the Tk::Text manpage(3).
