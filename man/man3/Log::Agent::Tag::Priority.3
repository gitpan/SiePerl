.\" Automatically generated by Pod::Man version 1.15
.\" Mon Apr 23 13:11:45 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "Agent::Tag::Priority 3"
.TH Agent::Tag::Priority 3 "perl v5.6.1" "2001-03-14" "User Contributed Perl Documentation"
.UC
.SH "NAME"
Log::Agent::Tag::Priority \- a log priority tag string
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& Not intended to be used directly
\& Inherits from Log::Agent::Tag.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class represents a log priority tag string.
.SH "CREATION ROUTINE PARAMETERS"
.IX Header "CREATION ROUTINE PARAMETERS"
The following parameters are defined, in alphabetical order:
.if n .Ip "\f(CW""""\-display""""\fR => \fIstring\fR" 4
.el .Ip "\f(CW\-display\fR => \fIstring\fR" 4
.IX Item "-display => string"
Specifies the priority/level string to display, with minimal variable
substitution.  For instance:
.Sp
.Vb 1
\& -display => '[$priority/$level]'
.Ve
The defined variables are documented in the \fB\s-1DISPLAY\s0 \s-1VARIABLES\s0\fR section
underneath.
.if n .Ip "\f(CW""""\-level""""\fR => \fIlevel\fR" 4
.el .Ip "\f(CW\-level\fR => \fIlevel\fR" 4
.IX Item "-level => level"
This parameter is internally added by \f(CW\*(C`Log::Agent\*(C'\fR when computing the
priority tag, since only it knows the level of the current messsage.
.if n .Ip "\f(CW""""\-postfix""""\fR => \fIflag\fR" 4
.el .Ip "\f(CW\-postfix\fR => \fIflag\fR" 4
.IX Item "-postfix => flag"
Whether tag should be placed after or before the log message.
By default, it is prepended to the log message, i.e. this parameter is false.
.if n .Ip "\f(CW""""\-priority""""\fR => \fIprio\fR" 4
.el .Ip "\f(CW\-priority\fR => \fIprio\fR" 4
.IX Item "-priority => prio"
This parameter is internally added by \f(CW\*(C`Log::Agent\*(C'\fR when computing the
priority tag, since only it knows the priority of the current messsage.
.if n .Ip "\f(CW""""\-separator""""\fR => \fIstring\fR" 4
.el .Ip "\f(CW\-separator\fR => \fIstring\fR" 4
.IX Item "-separator => string"
The separation string between the tag and the log message.
A single space by default.
.SH "DISPLAY VARIABLES"
.IX Header "DISPLAY VARIABLES"
The \f(CW\*(C`\-display\*(C'\fR switch understands a few variables that can be substituted
in the supplied string.  Both \f(CW$var\fR and \f(CW\*(C`${var}\*(C'\fR forms are supported.
Unknown variables are left untouched.
.if n .Ip "\f(CW""""$priority""""\fR" 4
.el .Ip "\f(CW$priority\fR" 4
.IX Item "$priority"
The full priority name of the logged message, e.g. \*(L"warning\*(R" or \*(L"error\*(R".
.if n .Ip "\f(CW""""$level""""\fR" 4
.el .Ip "\f(CW$level\fR" 4
.IX Item "$level"
The associated priority level of the logged message, a number.  For instance,
the level associated to \*(L"warning\*(R" is \f(CW\*(C`4\*(C'\fR.  See the Log::Agent::Priorities manpage
for the default name \-> level mapping.
.SH "AUTHOR"
.IX Header "AUTHOR"
Raphael Manfredi \fI<Raphael_Manfredi@pobox.com>\fR
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fILog::Agent::Tag\fR\|(3), \fILog::Agent::Message\fR\|(3), \fILog::Agent::Priorities\fR\|(3).
