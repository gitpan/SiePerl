.\" Automatically generated by Pod::Man version 1.15
.\" Mon Apr 23 12:19:24 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "SubCountry 3"
.TH SubCountry 3 "perl v5.6.1" "2001-03-15" "User Contributed Perl Documentation"
.UC
.SH "NAME"
Locale::SubCountry \- convert state, province, county etc. names to/from code
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&   use Locale::SubCountry;
.Ve
.Vb 2
\&   $UK_counties = new Locale::SubCountry('GB');
\&   print($UK_counties->full_name('DUMGAL'));  # Dumfries & Galloway
.Ve
.Vb 10
\&   $country = 'AUSTRALIA';
\&   @all_countries = &all_country_names;
\&   if ( grep(/$country/, @all_countries) )
\&   {
\&      $australia = new Locale::SubCountry($country);
\&   }
\&   else
\&   {
\&      die "No data for $country";
\&   }
.Ve
.Vb 2
\&   print($australia->code('New South Wales ')); # NSW
\&   print($australia->full_name('S.A.'));        # South Australia
.Ve
.Vb 5
\&   $upper_case = 1;
\&   print($australia->full_name('Qld',$upper_case)); # QUEENSLAND
\&   print $australia->country;          # AUSTRALIA
\&   print $australia->country_code;     # AU
\&   print $australia->sub_country_type; # State
.Ve
.Vb 1
\&   @all_country_codes = &all_country_codes;
.Ve
.Vb 5
\&   %all_australian_states = $australia->full_name_code_hash;
\&   foreach $abbrev ( sort keys %australian_states )
\&   {
\&      printf("%-3s : %s\en",$abbrev,%all_australian_states{$abbrev});
\&   }
.Ve
.Vb 1
\&   %all_australian_codes = $australia->code_full_name_hash;
.Ve
.Vb 2
\&   @all_australian_states = $australia->all_full_names;
\&   @all_australian_codes = $australia->all_codes;
.Ve
.SH "REQUIRES"
.IX Header "REQUIRES"
Perl 5.005 or above
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module allows you to convert the full name for a countries administrative
region to the code commonly used for postal addressing. The reverse lookup
can also be done.  Sub country codes are defined in \*(L"\s-1ISO\s0 3166\-2:1998, 
Codes for the representation of names of countries and their subdivisions\*(R".
.PP
Sub countries are termed as states in the \s-1US\s0 and Australia, provinces 
in Canada and counties in the \s-1UK\s0 and Ireland.
.PP
Additionally, names and codes for all sub countries in a country can be 
returned as either a hash or an array. 
.SH "METHODS"
.IX Header "METHODS"
.Sh "new"
.IX Subsection "new"
The \f(CW\*(C`new\*(C'\fR method creates an instance of a sub country object. This must be 
called before any of the following methods are invoked. The method takes a 
single argument, the name of the country that contains the sub country 
that you want to work with. It may be specified either by the \s-1ISO\s0 3166\-1
two letter code or the full name. These are currently:
.PP
.Vb 170
\&    AF - AFGHANISTAN
\&        AL - ALBANIA
\&    DZ - ALGERIA
\&    AO - ANGOLA
\&    AR - ARGENTINA
\&    AM - ARMENIA
\&    AU - AUSTRALIA
\&    AT - AUSTRIA
\&    AZ - AZERBAIJAN
\&    BS - BAHAMAS
\&    BH - BAHRAIN
\&    BD - BANGLADESH
\&    BY - BELARUS
\&    BE - BELGIUM
\&    BZ - BELIZE
\&    BJ - BENIN
\&    BT - BHUTAN
\&    BO - BOLIVIA
\&    BA - BOSNIA AND HERZEGOVINA
\&    BW - BOTSWANA
\&    BR - BRAZIL
\&    BN - BRUNEI DARUSSALAM
\&    BG - BULGARIA
\&    BF - BURKINA FASO
\&    KH - CAMBODIA
\&    CM - CAMEROON
\&    CA - CANADA
\&    CV - CAPE VERDE
\&    CF - CENTRAL AFRICAN REPUBLIC
\&    TD - CHAD
\&    CL - CHILE
\&    CN - CHINA
\&    CO - COLOMBIA
\&    KM - COMOROS
\&    CG - CONGO
\&    CR - COSTA RICA
\&    CI - CÔTE D'IVOIRE
\&    HR - CROATIA
\&    CU - CUBA
\&    CY - CYPRUS
\&    CX - CZECH REPUBLIC
\&    CO - CONGO, THE DEMOCRATIC REPUBLIC OF THE CONGO
\&    DK - DENMARK
\&    DJ - DJIBOUTI
\&    DO - DOMINICAN REPUBLIC
\&    EC - ECUADOR
\&    EG - EGYPT
\&    SV - EL SALVADOR
\&    QQ - EQUATORIAL GUINEA
\&    ER - ERITREA
\&    EE - ESTONIA
\&    ET - ETHIOPIA
\&    FJ - FIJI
\&    FR - FRANCE
\&    GA - GABON
\&    GM - GAMBIA
\&    GE - GEORGIA
\&    DE - GERMANY
\&    GH - GHANA
\&    GR - GREECE
\&    GT - GUATEMALA
\&    GN - GUINEA
\&    GW - GUINEA BISSAU
\&    GY - GUYANA
\&    HT - HAITI
\&    HN - HONDURAS
\&    HU - HUNGARY
\&    IE - ICELAND
\&    IN - INDIA
\&    ID - INDONESIA
\&        IL - ISRAEL
\&    IN - IRAN (ISLAMIC REPUBLIC OF)
\&    IQ - IRAQ
\&    IE - IRELAND
\&    IT - ITALY
\&    JM - JAMAICA
\&    JP - JAPAN
\&    JO - JORDAN
\&    KZ - KAZAKHSTAN
\&    KE - KENYA
\&    KI - KIRIBATI
\&    KP - KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF
\&    KR - KOREA, REPUBLIC OF
\&    KW - KUWAIT
\&    KG - KYRGYZSTAN
\&    LA - LAO PEOPLE'S DEMOCRATIC REPUBLIC
\&    LV - LATVIA
\&    LB - LEBANON
\&    LS - LESOTHO
\&    LR - LIBERIA
\&    LY - LIBYAN ARAB JAMAHIRIYA
\&    LT - LITHUANIA
\&    MG - MADAGASCAR
\&    MW - MALAWI
\&    MY - MALAYSIA
\&    MV - MALDIVES
\&    ML - MALI
\&    MH - MARSHALL ISLANDS
\&    MR - MAURITANIA
\&    MU - MAURITIUS
\&    MX - MEXICO
\&    FM - MICRONESIA (FEDERATED STATES OF)
\&    MD - MOLDOVA, REPUPLIC OF
\&    MN - MONGOLIA
\&    MA - MOROCCO
\&    MZ - MOZAMBIQUE
\&    MM - MYANMAR
\&    NA - NAMIBIA
\&    NL - NETHERLANDS
\&    NZ - NEW ZEALAND
\&    NI - NICARAGUA
\&    NE - NIGER
\&    NG - NIGERIA
\&    NO - NORWAY
\&    OM - OMAN
\&    PK - PAKISTAN
\&    PA - PANAMA
\&    PG - PAPUA NEW GUINEA
\&    PY - PARAGUAY
\&    PE - PERU
\&    PH - PHILIPPINES
\&    PL - POLAND
\&    PT - PORTUGAL
\&    QA - QATAR
\&    RO - ROMANIA
\&    RU - RUSSIA
\&    RW - RWANDA
\&    ST - SAO TOME AND PRINCIPE
\&    SA - SAUDI ARABIA
\&    SN - SENEGAL
\&    SL - SIERRA LEONE
\&    SK - SLOVAKIA
\&    SI - SLOVENIA
\&    SB - SOLOMON ISLANDS
\&    SO - SOMALIA
\&    ZA - SOUTH AFRICA
\&    ES - SPAIN
\&    LK - SRI LANKA
\&    SH - ST HELENA
\&    SD - SUDAN
\&    SR - SURINAME
\&    SZ - SWAZILAND
\&    SE - SWEDEN
\&    CH - SWITZERLAND
\&    SY - SYRIAN ARAB REPUBLIC
\&    TW - TAIWAN, PROVINCE OF CHINA
\&    TJ - TAJIKISTAN
\&    TZ - TANZANIA, UNITED REPUBLIC OF
\&    TH - THAILAND
\&    TG - TOGO
\&    TT - TRINIDAD AND TOBAGO
\&    TN - TUNISIA
\&    TR - TURKEY
\&    TM - TURKMENISTAN
\&    UG - UGANDA
\&    UA - UKRAINE
\&    AE - UNITED ARAB EMIRATES
\&    GB - UNITED KINGDOM
\&    US - UNITED STATES
\&    UM - UNITED STATES MINOR OUTLYING ISLANDS
\&    UY - URUGUAY
\&    UZ - UZBEKISTAN
\&    VU - VANUATU
\&    VE - VENEZUELA
\&    VN - VIET NAM
\&    WF - WALLIS AND FUTUNA ISLANDS
\&    YE - YEMEN
\&    YU - YUGOSLAVIA
\&    ZM - ZAMBIA
\&    ZW - ZIMBABWE
.Ve
All forms of upper/lower case are acceptable in the country's spelling. If a 
country name is supplied that the module doesn't recognise, it will die.
.Sh "country"
.IX Subsection "country"
Returns the current country of the sub country object
.Sh "country_code"
.IX Subsection "country_code"
Returns the two letter current country of the sub country object
.Sh "sub_country_type"
.IX Subsection "sub_country_type"
Returns the current sub country type (state, county etc) for 
the sub country object, or 'unknown' if a value is not defined. 
.Sh "code"
.IX Subsection "code"
The \f(CW\*(C`code\*(C'\fR method takes the full name of a sub country in the currently
assigned country and returns the sub country's code. The full name can appear
in mixed case. All white space and non alphabetic characters are ignored, 
except the single space used to separate sub country names such as 
\&\*(L"New South Wales\*(R". The code is returned as a capitalised string, or 
\&\*(L"unknown\*(R" if no match is found.
.Sh "full_name"
.IX Subsection "full_name"
The \f(CW\*(C`full_name\*(C'\fR method takes the code of a sub country in the currently
assigned country and returns the sub country's full name. The code can appear
in mixed case. All white space and non alphabetic characters are ignored. The
full name is returned as a title cased string, such as \*(L"South Australia\*(R".
.PP
If an optional argument is supplied and set to a true value, the full name is
returned as an upper cased string.
.Sh "full_name_code_hash"
.IX Subsection "full_name_code_hash"
Returns a hash of name/code pairs for the currently assigned country, 
keyed by sub country name.
.Sh "code_full_name_hash"
.IX Subsection "code_full_name_hash"
Returns a hash of code/name pairs for the currently assigned country,
keyed by sub country code.
.Sh "all_full_names"
.IX Subsection "all_full_names"
Returns an array of sub country names for the currently assigned country, 
sorted alphabetically. 
.Sh "all_codes"
.IX Subsection "all_codes"
Returns an array of sub country codes for the currently assigned country, 
sorted alphabetically.
.Sh "all_country_names"
.IX Subsection "all_country_names"
Returns an array of all country names that this module can do lookups for,
sorted alphabetically. This is implemented as a conventional subroutine rather 
than a method. This allows us to check if lookups can be done for a given country
before actually creating the lookup object.
.Sh "all_country_codes"
.IX Subsection "all_country_codes"
Returns an array of all country 2 letter codes that this module can do lookups for,
sorted alphabetically. This is implemented as a conventional subroutine rather 
than a method. This allows us to check if lookups can be done for a given country
code before actually creating the lookup object.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1ISO\s0 3166\-2:1998, Codes for the representation of names of countries and their subdivisions
Also released as \s-1AS/NZS\s0 2632.2:1999
.PP
Locale::Country
Locale::US
.SH "LIMITATIONS"
.IX Header "LIMITATIONS"
If a sub country's full name contains the word 'and', it is represented by an
ampersand, as in 'Dumfries & Galloway'.
.PP
\&\s-1ISO\s0 3166\-2:1998 defines all sub country codes as being up to 3 letters and/or
numbers. These codes are commonly accepted for countries like the \s-1USA\s0
and Canada. In Australia, Ireland and the \s-1UK\s0, this method of abbreviation is
not widely accepted. For example, the \s-1ISO\s0 code for 'New South Wales' is '\s-1NS\s0',
but '\s-1NSW\s0' is the only abbreviation that is actually used. I could add a
flag to enforce \s-1ISO-3166\-2\s0 codes if needed.
.PP
The \s-1ISO\s0 3166\-2 standard romanizes the names of provinces and regions in non-latin 
script areas, such as Russia and South Korea. One Romanisation is given for each
province name. For Russia, the \s-1BGN\s0 (1947) Romanization is used. 
.PP
The \s-1ISO\s0 3166\-2 standard will typically list more than one type of sub country
for each country. For example, Australia has states and territories, Italy
has provinces and regions. Normally I use all the different types of sub country.
This module will not tell the type of each individual subcountry. It could be
recorded if needed, but would take a lot of effort. Instead, the most common
type of sub country is recorded for each country. So for Australia, this would
be 'State'.
.PP
The following sub country names have more than one code, and may not return  
the correct code for that sub country. These entries are usually duplicated
because the name represents two different type of sub country, such as a
province and a geographical unit 
.PP
\&\s-1AZERBAIJAN\s0 : Länkäran; \s-1LA\s0,LAN
\&\s-1AZERBAIJAN\s0 : Säki; \s-1SA\s0,SAK
\&\s-1AZERBAIJAN\s0 : Susa; \s-1SS\s0,SUS
\&\s-1AZERBAIJAN\s0 : Yevlax; \s-1YE\s0,YEV
\&\s-1INDONESIA\s0  : Kalimantan Timur; \s-1KI\s0,KT
\&\s-1LAOS\s0       : Vientiane \s-1VI\s0,VT
\&\s-1MOLDOVA\s0    : Hahul; \s-1CA\s0,CHL
\&\s-1MOLDOVA\s0    : Bubasari; \s-1DU\s0,DBI
\&\s-1MOLDOVA\s0    : Hrhei; \s-1OR\s0,OHI
\&\s-1MOLDOVA\s0    : Coroca; \s-1SO\s0,SOA
\&\s-1MOLDOVA\s0    : Gngheni; \s-1UN\s0,UGI
\&\s-1MOZAMBIQUE\s0 : Maputo; \s-1MPM\s0,L
.SH "BUGS"
.IX Header "BUGS"
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2000\-1 Kim Ryan. All rights reserved.
This program is free software; you can redistribute it 
and/or modify it under the terms of the Perl Artistic License
(see http://www.perl.com/perl/misc/Artistic.html).
.SH "AUTHOR"
.IX Header "AUTHOR"
Locale::SubCountry was written by Kim Ryan <kimaryan@ozemail.com.au> in 2000.
.SH "CREDITS"
.IX Header "CREDITS"
Alastair McKinstry provided nearly all the sub country codes and names.
.PP
Terrence Brannon produced Locale::US, which was the starting point for
this module. Some of the ideas in Geography::States were also used.
.PP
Mark Summerfield and Guy Fraser provided the list of \s-1UK\s0 counties.
.PP
Code/Sub country data. Comments (lines starting with #) and 
blank lines are ignored. Read in at start up by \s-1INIT\s0 subroutine.
.PP
Format is:
Country=<\s-1COUNTRY\s0 \s-1NAME\s0>
SubCountryType=<Sub Country Type>  # optional field, specify state, county etc
Code=<\s-1COUNTRY\s0 \s-1CODE\s0> # from \s-1ISO\s0 3166\-1 format
\&\s-1CODE\s0:Full Name
\&\s-1CODE\s0:Full Name
\&\s-1CODE\s0:Full Name
\&...
.PP
Country=<\s-1COUNTRY\s0 \s-1NAME\s0>
\&...
