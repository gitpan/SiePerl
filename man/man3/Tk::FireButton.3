.\" Automatically generated by Pod::Man version 1.15
.\" Fri Apr 20 15:22:48 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "FireButton 3"
.TH FireButton 3 "perl v5.6.1" "2000-10-22" "User Contributed Perl Documentation"
.UC
.SH "NAME"
Tk::FireButton \- Button that keeps invoking callback when pressed
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Tk::FireButton;
.Ve
.Vb 1
\&    $fire = $parent->FireButton( ... );
.Ve
.Vb 5
\&    # May/should change:
\&    $w->Whatever(... -bitmap => $Tk::FireButton::INCBITMAP, ...);
\&    $w->Whatever(... -bitmap => $Tk::FireButton::DECBITMAP, ...);
\&    $w->Whatever(... -bitmap => $Tk::FireButton::HORIZINCBITMAP, ...);
\&    $w->Whatever(... -bitmap => $Tk::FireButton::HORIZDECBITMAP, ...);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBFireButton\fR is-a \fBButton\fR widget (see the Tk::Button manpage) that
keeps invoking the callback bound to it as long as the <FireButton>
is pressed.
.PP
Four suitable bitmaps are predefined in this package: \f(CW$INCBITMAP\fR and
\&\f(CW$DECBITMAP\fR for vertical increment and decrement buttons, and
\&\f(CW$HORIZINCBITMAP\fR and \f(CW$HORIZDECBITMAP\fR for horizontal increment and
decrement buttons. See below for methods accessing these bitmaps.
.SH "SUPER-CLASS"
.IX Header "SUPER-CLASS"
The \fBFireButton\fR widget-class is derived from the \fBButton\fR
widget-class and inherits all the methods and options its
super-class (see the Tk::Button manpage).
.SH "STANDARD OPTIONS"
.IX Header "STANDARD OPTIONS"
\&\fBFireButton\fR supports all the standard options of a \fBButton\fR widget.
See the Tk::options manpage for details on the standard options.
.SH "WIDGET-SPECIFIC OPTIONS"
.IX Header "WIDGET-SPECIFIC OPTIONS"
.Ip "Name:             \fBrepeatDelay\fR" 4
.IX Item "Name:             repeatDelay"
.PD 0
.Ip "Class:            \fBRepeatDelay\fR" 4
.IX Item "Class:            RepeatDelay"
.Ip "Switch:           \fB\-repeatdelay\fR" 4
.IX Item "Switch:           -repeatdelay"
.Ip "Fallback:		\fB300\fR (milliseconds)" 4
.IX Item "Fallback:		300 (milliseconds)"
.PD
Specifies the amount of time before the callback is first invoked after
the Button-1 is pressed over the widget.
.Ip "Name:             \fBrepeatInterval\fR" 4
.IX Item "Name:             repeatInterval"
.PD 0
.Ip "Class:            \fBRepeatInterval\fR" 4
.IX Item "Class:            RepeatInterval"
.Ip "Switch:           \fB\-repeatinterval\fR" 4
.IX Item "Switch:           -repeatinterval"
.Ip "Fallback:		\fB100\fR (milliseconds)" 4
.IX Item "Fallback:		100 (milliseconds)"
.PD
Specifies the amount of time between invokations of the
callback bound to the widget with the \f(CW\*(C`command\*(C'\fR option.
.SH "CHANDED OPTION FALLBACK VALUES"
.IX Header "CHANDED OPTION FALLBACK VALUES"
The fallback values of the following options as different
from the \fBButton\fR widget:
.PP
.Vb 2
\&        -padx               => 0,
\&        -pady               => 0,
.Ve
.SH "METHODS"
.IX Header "METHODS"
Same as for Button widget.
.PP
Additionally, there are four methods returning the names of the
standard increment and decrement bitmaps: \s-1INCBITMAP\s0, \s-1HORIZINCBITMAP\s0,
\&\s-1DECBITMAP\s0, and \s-1HORIZDECBITMAP\s0.
.PP
Subclasses of FireButton may override these methods to supply
different increment and decrement bitmaps.
.SH "ADVERTISED WIDGETS"
.IX Header "ADVERTISED WIDGETS"
None.
.SH "HISTORY"
.IX Header "HISTORY"
The code was extracted from Tk::NumEntry and slightly modified
by Achim Bohnet >ach@mpe.mpg.de>.  Tk::NumEntry's author
is Graham Barr >gbarr@pobox.com>. The current maintainer is
Slaven Rezic >eserte@cs.tu-berlin.de>.
