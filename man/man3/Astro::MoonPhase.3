.\" Automatically generated by Pod::Man version 1.15
.\" Mon Apr 23 08:16:35 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "MoonPhase 3"
.TH MoonPhase 3 "perl v5.6.1" "2000-01-20" "User Contributed Perl Documentation"
.UC
.SH "NAME"
MoonPhase \- Information about the phase of the moon
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use MoonPhase;
.PP
.Vb 7
\&        ( $MoonPhase,
\&          $MoonIllum,
\&          $MoonAge,
\&          $MoonDist,
\&          $MoonAng,
\&          $SunDist,
\&          $SunAng ) = phase($seconds_since_1970);
.Ve
.Vb 1
\&        @phases  = phasehunt($seconds_since_1970);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
MoonPhase calculates information about the phase of the moon
at a given time.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.Sh "\fIphase()\fP"
.IX Subsection "phase()"
.Vb 7
\&        ( $MoonPhase,
\&          $MoonIllum,
\&          $MoonAge,
\&          $MoonDist,
\&          $MoonAng,
\&          $SunDist,
\&          $SunAng )  = phase($seconds_since_1970);
.Ve
.Vb 1
\&          $MoonPhase = phase($seconds_since_1970);
.Ve
The argument is the time for which the phase is requested,
expressed as a time returned by the \f(CW\*(C`time\*(C'\fR function. If \f(CW\*(C`$seconds_since_1970\*(C'\fR
is omitted, it does \f(CW\*(C`phase(time)\*(C'\fR.
.PP
Return value in scalar context is \f(CW$MoonPhase\fR,
the terminator phase angle as a percentage of a full circle (i.e., 0 to 1).
.Ip "\fBReturn values in array context:\fR" 4
.IX Item "Return values in array context:"
.PD 0
.Ip "$MoonPhase:" 4
.IX Item "$MoonPhase:"
.PD
the terminator phase angle as a percentage of a full circle (i.e., 0 to 1)
.Ip "$MoonIllum:" 4
.IX Item "$MoonIllum:"
the illuminated fraction of the Moon's disc
.Ip "$MoonAge:" 4
.IX Item "$MoonAge:"
the Moon's age in days and fraction
.Ip "$MoonDist:" 4
.IX Item "$MoonDist:"
the distance of the Moon from the centre of the Earth
.Ip "$MoonAng:" 4
.IX Item "$MoonAng:"
the angular diameter subtended by the Moon as seen by
an observer at the centre of the Earth.
.Ip "$SunDist:" 4
.IX Item "$SunDist:"
the distance from the Sun in km
.Ip "$SunAng:" 4
.IX Item "$SunAng:"
the angular size of Sun in degrees
.PP
Example:
.PP
.Vb 7
\&   ( $MoonPhase,
\&     $MoonIllum,
\&     $MoonAge,
\&     $MoonDist,
\&     $MoonAng,
\&     $SunDist,
\&     $SunAng ) = phase();
.Ve
.Vb 7
\&     print "MoonPhase  = $MoonPhase\en";
\&     print "MoonIllum  = $MoonIllum\en";
\&     print "MoonAge    = $MoonAge\en";
\&     print "MoonDist   = $MoonDist\en";
\&     print "MoonAng    = $MoonAng\en";
\&     print "SunDist    = $SunDist\en";
\&     print "SunAng     = $SunAng\en";>
.Ve
could print something like this:
.PP
.Vb 7
\&     MoonPhase  = 0.598939375319023
\&     MoonIllum  = 0.906458030827876
\&     MoonAge    = 17.6870323368022
\&     MoonDist   = 372479.357420033
\&     MoonAng    = 0.534682403555093
\&     SunDist    = 152078368.820205
\&     SunAng     = 0.524434538105092
.Ve
.Sh "\fIphasehunt()\fP"
.IX Subsection "phasehunt()"
.Vb 1
\&     @phases = phasehunt($seconds_since_1970);
.Ve
Finds time of phases of the moon which surround the given
date.  Five phases are found, starting and ending with the
new moons which bound the current lunation.
.PP
The argument is the time, expressed as a time returned
by the \f(CW\*(C`time\*(C'\fR function. If \f(CW\*(C`$seconds_since_1970\*(C'\fR
is omitted, it does \f(CW\*(C`phasehunt(time)\*(C'\fR.
.PP
Example:
.PP
.Vb 6
\&    @phases = phasehunt();
\&    print "New Moon      = ", scalar(localtime($phases[0])), "\en";
\&    print "First quarter = ", scalar(localtime($phases[1])), "\en";
\&    print "Full moon     = ", scalar(localtime($phases[2])), "\en";
\&    print "Last quarter  = ", scalar(localtime($phases[3])), "\en";
\&    print "New Moon      = ", scalar(localtime($phases[4])), "\en";
.Ve
could print something like this:
.PP
.Vb 5
\&    New Moon      = Wed Jun 24 06:51:47 1998
\&    First quarter = Wed Jul  1 21:42:19 1998
\&    Full moon     = Thu Jul  9 19:02:47 1998
\&    Last quarter  = Thu Jul 16 18:15:18 1998
\&    New Moon      = Thu Jul 23 16:45:01 1998
.Ve
.SH "ABOUT THE ALGORITHMS"
.IX Header "ABOUT THE ALGORITHMS"
The algorithms used in this program to calculate the positions of Sun and
Moon as seen from the Earth are given in the book \fIPractical Astronomy
With  Your  Calculator\fR  by  \fBPeter  Duffett-Smith,   Second   Edition,
Cambridge University Press, 1981\fR.  Ignore the word \*(L"Calculator\*(R" in the
title;  this  is  an  essential  reference  if  you're  interested  in
developing  software  which  calculates  planetary  positions, orbits,
eclipses, and  the  like.   If  you're  interested  in  pursuing  such
programming, you should also obtain:
.PP
\&\fIAstronomical  Formulae for Calculators\fR by \fBJean Meeus, Third Edition,
Willmann-Bell, 1985\fR.  A must-have.
.PP
\&\fIPlanetary  Programs  and  Tables  from  \-4000  to  +2800\fR  by  \fBPierre
Bretagnon  and Jean-Louis Simon, Willmann-Bell, 1986\fR.  If you want the
utmost  (outside  of  \s-1JPL\s0)  accuracy  for  the  planets,  it's   here.
.PP
\&\fICelestial \s-1BASIC\s0\fR by \fBEric Burgess, Revised Edition, Sybex, 1985\fR.  Very
cookbook oriented, and many of the algorithms are hard to dig  out  of
the turgid \s-1BASIC\s0 code, but you'll probably want it anyway.
.PP
Many of these references can be obtained from Willmann-Bell, P.O.  Box
35025,  Richmond,  \s-1VA\s0 23235, \s-1USA\s0.  Phone: (804) 320\-7016.  In addition
to their own publications, they stock most of the standard  references
for mathematical and positional astronomy.
.SH "LICENCE"
.IX Header "LICENCE"
This  program is in the public domain: \*(L"Do what thou wilt shall be the
whole of the law\*(R".
.SH "AUTHORS"
.IX Header "AUTHORS"
the moontool.c:
.PP
.Vb 4
\&    A Moon for the Sun
\&    Release 2.0
\&    Designed and implemented by John Walker in December 1987,
\&    revised and updated in February of 1988.
.Ve
Perl transcription:
.PP
.Vb 2
\&    Raino Pikkarainen, 1998
\&    raino.pikkarainen@saunalahti.fi
.Ve
