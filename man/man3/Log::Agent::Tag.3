.\" Automatically generated by Pod::Man version 1.15
.\" Mon Apr 23 13:10:48 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "Agent::Tag 3"
.TH Agent::Tag 3 "perl v5.6.1" "2001-03-14" "User Contributed Perl Documentation"
.UC
.SH "NAME"
Log::Agent::Tag \- formats caller information
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& Intended to be inherited from
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class is meant to be inherited by all the classes implementing a log
message tag.
.PP
A message tag is a little string that is either appended or prepended to
all log messages.
.PP
For instance, and oversimplifying a bit, a tag meant to be prepended will be
inserted in front of the current log message, separated by \fIseparator\fR,
which defaults to a single space:
.PP
.Vb 3
\&   +------------+-----------+---------------------------------+
\&   | tag string | separator |      current log message        |
\&   +------------+-----------+---------------------------------+
.Ve
This operation is called \fItag insertion\fR. The whole string then becomes
the \fIcurrent log message\fR, and can be the target of another tag insertion.
.PP
The reality is a little bit more complex, to allow successive tags to be
prepended or appended in the order they are specified, and not in reverse
order as they would be if naively implemented.  See the Log::Agent::Message manpage
for the exact semantics of \fIappend()\fR and \fIprepend()\fR operations.
.SH "FEATURES"
.IX Header "FEATURES"
This section documents the interface provided to heirs, in case you wish
to implement your own tag class.
.Ip "_init(\fIname\fR, \fIpostfix\fR, \fIseparator\fR)" 4
.IX Item "_init(name, postfix, separator)"
Initialization routine that should be called by all heirs during creation
to initialize the common attributes.
.Ip "postfix" 4
.IX Item "postfix"
When true, the tag is meant to be appended to the log message.  Otherwise,
it is prepended.
.Ip "name" 4
.IX Item "name"
The name of this tag.  It is meant to provide by-name access to tags, check
whether a given tag is recorded, etc...  The names \*(L"caller\*(R" and \*(L"priority\*(R"
are architecturally defined to refer to \f(CW\*(C`Log::Agent::Tag::Caller\*(C'\fR and
\&\f(CW\*(C`Log::Agent::Tag::Priority\*(C'\fR objects.
.Sp
\&\fB\s-1NOTE\s0\fR: Currently unused by any client code.
.Ip "separator" 4
.IX Item "separator"
The sperating string inserted between the tag and the log message.
It defaults to \f(CW\*(C`" "\*(C'\fR if not specified, i.e. left to \f(CW\*(C`undef\*(C'\fR when
calling \fI_init()\fR.
.Ip "\fIstring()\fR" 4
.IX Item "string()"
A \fBdeferred\fR routine, to be implemented by heirs.
.Sp
Returns the tag string only, without the separator, since its exact placement
depends on the value of the \f(CW\*(C`postfix\*(C'\fR attribute.
.Ip "insert(\fImessage\fR)" 4
.IX Item "insert(message)"
Insert this tag withing the \f(CW\*(C`Log::Agent::Message\*(C'\fR \fImessage\fR, according
to the tag specifications (placement, separator).  Calls \fIstring()\fR to produce
the tag string.
.Sp
This routine is \fBfrozen\fR and should not be redefined by heirs.
.SH "STANDARD TAGGING CLASSES"
.IX Header "STANDARD TAGGING CLASSES"
Tagging classes define via their \f(CW\*(C`string()\*(C'\fR routine what is the string
to be used as a tag.  The insertion of the tag within the log message
is done via a frozen routine from the \f(CW\*(C`Log::Agent::Tag\*(C'\fR ancestor.
.PP
The following classes are provided by \f(CW\*(C`Log::Agent\*(C'\fR:
.if n .Ip "\f(CW""""Log::Agent::Tag::Callback""""\fR" 4
.el .Ip "\f(CWLog::Agent::Tag::Callback\fR" 4
.IX Item "Log::Agent::Tag::Callback"
The \f(CW\*(C`string()\*(C'\fR routine invokes a user-supplied callback, given as a
\&\f(CW\*(C`Callback\*(C'\fR object.  You need the Callback module from \s-1CPAN\s0 if you
wish to use this class.
.if n .Ip "\f(CW""""Log::Agent::Tag::Caller""""\fR" 4
.el .Ip "\f(CWLog::Agent::Tag::Caller\fR" 4
.IX Item "Log::Agent::Tag::Caller"
Used internally to compute the caller and format it according
to user specifications.
.if n .Ip "\f(CW""""Log::Agent::Tag::Priority""""\fR" 4
.el .Ip "\f(CWLog::Agent::Tag::Priority\fR" 4
.IX Item "Log::Agent::Tag::Priority"
Used internally to format message priorities and add them to the log messages.
.if n .Ip "\f(CW""""Log::Agent::Tag::String""""\fR" 4
.el .Ip "\f(CWLog::Agent::Tag::String\fR" 4
.IX Item "Log::Agent::Tag::String"
Defines a constant tagging string that should be added in all the
log messages, e.g. a web session \s-1ID\s0.
.SH "AUTHOR"
.IX Header "AUTHOR"
Raphael Manfredi \fI<Raphael_Manfredi@pobox.com>\fR
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fILog::Agent::Message\fR\|(3).
