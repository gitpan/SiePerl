.\" Automatically generated by Pod::Man version 1.15
.\" Mon Apr 23 08:07:14 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "TextANSIColor 3"
.TH TextANSIColor 3 "perl v5.6.1" "2000-05-03" "User Contributed Perl Documentation"
.UC
.SH "NAME"
Tk::TextANSIColor \- Tk::Text widget with support for \s-1ANSI\s0 color escape codes
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Tk::TextANSIColor;
.Ve
.Vb 1
\&  $wid = $mw->TextANSIColor(?options,...?);
.Ve
.Vb 1
\&  $wid->insert($pos, $string, ?taglist, ?string, ?taglist);
.Ve
.Vb 4
\&  use Term::ANSIColor; 
\&  $red = color('red');  # Retrieve color codes
\&  $bold = color('bold');
\&  $wid->insert('end', "$red red text $bold with bold\en");
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This widget extends the capabilities of the standard Tk::Text
widget by adding support for \s-1ANSI\s0 color escape codes. When these
escape codes are detected they are replaced by equivalent tags.
.PP
This widget was developed to solve the problem associated with
driving a scrolling status display on a \s-1GUI\s0 as well as a status display 
going to an Xterm without having to know whether an xterm
or Tk window is receiving the status information. Mainly used
in conjunction with a tied filehandle:
.PP
.Vb 2
\&  $text = $MW->TextANSIColor->pack;
\&  tie *TEXT, "Tk::TextANSIColor", $text;
.Ve
.Vb 1
\&  $info = colored("Some information\en", 'red');
.Ve
.Vb 3
\&  # Print information to all filehandles
\&  print TEXT $info
\&  print STDOUT $info
.Ve
Currently the Term::ANSIColor module is required in order
to decode the escape codes (and probably to generate them in
the first place).
.SH "TAGS"
.IX Header "TAGS"
This widget uses the following tags internally:
.PP
.Vb 4
\&  ANSIbd - bold
\&  ANSIul - underline
\&  ANSIfgCOL - foreground color
\&  ANSIbgCOL - background color
.Ve
where \s-1COL\s0 can be one of black, red, green, yellow, blue, magenta, 
cyan or white.
.PP
If required, the tags can be altered after the widget is created by
using the \fItagConfigure()\fR method. e.g.:
.PP
.Vb 1
\&  $widget->tagConfigure('ANSIfgred', -foreground => 'blue');
.Ve
in order to make 'red' appear 'blue'.
.SH "REQUIREMENTS"
.IX Header "REQUIREMENTS"
This modules requires the \f(CW\*(C`Term::ANSIColor\*(C'\fR module.
The \f(CW\*(C`Tk\*(C'\fR module is also required.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
the Tk::Text manpage, the Term::ANSIColor manpage
.SH "AUTHOR"
.IX Header "AUTHOR"
Tim Jenness (<\fIt.jenness@jach.hawaii.edu\fR>)
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 1999\-2000 Tim Jenness. All rights reserved.
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
