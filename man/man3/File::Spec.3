.\" Automatically generated by Pod::Man version 1.15
.\" Tue Jun 12 09:34:25 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "Spec 3"
.TH Spec 3 "perl v5.6.1" "2000-06-27" "User Contributed Perl Documentation"
.UC
.SH "NAME"
File::Spec \- portably perform operations on file names
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&        use File::Spec;
.Ve
.Vb 1
\&        $x=File::Spec->catfile('a', 'b', 'c');
.Ve
which returns 'a/b/c' under Unix. Or:
.PP
.Vb 1
\&        use File::Spec::Functions;
.Ve
.Vb 1
\&        $x = catfile('a', 'b', 'c');
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module is designed to support operations commonly performed on file
specifications (usually called \*(L"file names\*(R", but not to be confused with the
contents of a file, or Perl's file handles), such as concatenating several
directory and file names into a single path, or determining whether a path
is rooted. It is based on code directly taken from MakeMaker 5.17, code
written by Andreas Ko\*:nig, Andy Dougherty, Charles Bailey, Ilya
Zakharevich, Paul Schinder, and others.
.PP
Since these functions are different for most operating systems, each set of
\&\s-1OS\s0 specific routines is available in a separate module, including:
.PP
.Vb 5
\&        File::Spec::Unix
\&        File::Spec::Mac
\&        File::Spec::OS2
\&        File::Spec::Win32
\&        File::Spec::VMS
.Ve
The module appropriate for the current \s-1OS\s0 is automatically loaded by
File::Spec. Since some modules (like \s-1VMS\s0) make use of facilities available
only under that \s-1OS\s0, it may not be possible to load all modules under all
operating systems.
.PP
Since File::Spec is object oriented, subroutines should not called directly,
as in:
.PP
.Vb 1
\&        File::Spec::catfile('a','b');
.Ve
but rather as class methods:
.PP
.Vb 1
\&        File::Spec->catfile('a','b');
.Ve
For simple uses, the File::Spec::Functions manpage provides convenient functional
forms of these methods.
.PP
For a list of available methods, please consult the File::Spec::Unix manpage,
which contains the entire set, and which is inherited by the modules for
other platforms. For further information, please see the File::Spec::Mac manpage,
the File::Spec::OS2 manpage, the File::Spec::Win32 manpage, or the File::Spec::VMS manpage.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
File::Spec::Unix, File::Spec::Mac, File::Spec::OS2, File::Spec::Win32,
File::Spec::VMS, File::Spec::Functions, ExtUtils::MakeMaker
.SH "AUTHORS"
.IX Header "AUTHORS"
Kenneth Albanowski <\fIkjahds@kjahds.com\fR>, Andy Dougherty
<\fIdoughera@lafcol.lafayette.edu\fR>, Andreas Ko\*:nig
<\fIA.Koenig@franz.ww.TU-Berlin.DE\fR>, Tim Bunce <\fITim.Bunce@ig.co.uk\fR>. \s-1VMS\s0
support by Charles Bailey <\fIbailey@newman.upenn.edu\fR>.  \s-1OS/2\s0 support by
Ilya Zakharevich <\fIilya@math.ohio-state.edu\fR>. Mac support by Paul Schinder
<\fIschinder@pobox.com\fR>.  \fIabs2rel()\fR and \fIrel2abs()\fR written by
Shigio Yamaguchi <\fIshigio@tamacom.com\fR>, modified by Barrie Slaymaker
<\fIbarries@slaysys.com\fR>.  \fIsplitpath()\fR, \fIsplitdir()\fR, \fIcatpath()\fR and \fIcatdir()\fR
by Barrie Slaymaker.
