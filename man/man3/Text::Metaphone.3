.\" Automatically generated by Pod::Man version 1.15
.\" Mon Apr 23 12:29:14 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "Metaphone 3"
.TH Metaphone 3 "perl v5.6.1" "1999-03-04" "User Contributed Perl Documentation"
.UC
.SH "NAME"
Text::Metaphone \- A modern soundex.  Phonetic encoding of words.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  use Text::Metaphone;
\&  $phoned_words = Metaphone('Schwern');
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\f(CW\*(C`Metaphone()\*(C'\fR is a function whereby a string/word is broken down into
a rough approximation of its english phonetic pronunciation.  Very
similar in concept and purpose to soundex, but much more
comprehensive in its approach.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.Ip "\fBMetaphone\fR" 4
.IX Item "Metaphone"
.Vb 1
\&    $phoned_word = Metaphone($word, $max_phone_len);
.Ve
Takes a word and encodes it according to the Metaphone algorithm.
The algorithm only deals with alphabetical characters, all else is ignored.
.Sp
If \f(CW$max_phone_len\fR is provided, Metaphone will only encode up to that many
characters for each word.
.Sp
\&'sh' is encoded as 'X', 'th' is encoded as '0'.  This can be changed
in the metaphone.h header file.
.SH "CAVEATS"
.IX Header "CAVEATS"
.Ip "Metaphone algorithm changes" 4
.IX Item "Metaphone algorithm changes"
I have made a few minor changes to the traditional metaphone algorithm found
in the books.  The most significant one is that it will differenciate between
\&\s-1SCH\s0 and \s-1SCHW\s0 making the former K (As in School) and the latter sh (as in
Schwartz and Schwern).
.Sp
My changes can be turned off by defining the \s-1USE_TRADITIONAL_METAPHONE\s0
flag in metaphone.h.
.Sp
Due to these changes, any users of Metaphone v1.00 or earlier which have stored
metaphonetic encodings, they should recalculate those with the new verison.
.SH "AUTHOR"
.IX Header "AUTHOR"
Michael G Schwern <schwern@pobox.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Sh "Man pages"
.IX Subsection "Man pages"
the Text::Soundex manpage
.Sh "Books, Journals and Magazines"
.IX Subsection "Books, Journals and Magazines"
.RS 4
.if n .Ip "Binstock, Andrew & Rex, John. """"Metaphone:  A Modern Soundex."""" \fIPractical Algorithms For Programmers.\fR  Reading, Mass:  Addion-Wesley, 1995  pp160\-169" 3
.el .Ip "Binstock, Andrew & Rex, John. ``Metaphone:  A Modern Soundex.'' \fIPractical Algorithms For Programmers.\fR  Reading, Mass:  Addion-Wesley, 1995  pp160\-169" 3
.IX Item "Binstock, Andrew & Rex, John. "Metaphone:  A Modern Soundex. Practical Algorithms For Programmers.  Reading, Mass:  Addion-Wesley, 1995  pp160-169"
Contains an explaination of the basic metaphone concept & algorithm and C code
from which I learned of Metaphone and ported this module.
.if n .Ip "Parker, Gary. """"A Better Phonetic Search."""" \fIC Gazette\fR, Vol. 5, No. 4 (June/July), 1990." 3
.el .Ip "Parker, Gary. ``A Better Phonetic Search.'' \fIC Gazette\fR, Vol. 5, No. 4 (June/July), 1990." 3
.IX Item "Parker, Gary. "A Better Phonetic Search. C Gazette, Vol. 5, No. 4 (June/July), 1990."
This is the public-domain C version of metaphone from which Binstock & Rex 
based their own..  I haven't actually read it.
.Ip "Philips, Lawrence. \fIComputer Language\fR, Vol. 7, No. 12 (December), 1990." 3
.IX Item "Philips, Lawrence. Computer Language, Vol. 7, No. 12 (December), 1990."
And here's the original Metaphone algorithm as presented in Pick \s-1BASIC\s0.
.RE
.RS 4
.SH "COPYRIGHT, et al."
.IX Header "COPYRIGHT, et al."
Copyright (c) 1997\-1999 Michael G Schwern.  All Rights Reserved.
This program is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
